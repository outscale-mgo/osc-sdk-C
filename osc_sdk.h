/**
 * BSD 3-Clause License
 *
 * Copyright (c) 2022, Outscale SAS
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice, this
 *   list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 *   this list of conditions and the following disclaimer in the documentation
 *   and/or other materials provided with the distribution.
 *
 * 3. Neither the name of the copyright holder nor the names of its
 *   contributors may be used to endorse or promote products derived from
 *   this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 **/

 /*
  * This code is autogenerated, don't edit it directely
  */

#ifndef __SDK_C__
#define __SDK_C__

#include <curl/curl.h>

#ifdef __GNUC__
#define auto_osc_str __attribute__((cleanup(osc_deinit_str)))
#define auto_osc_env __attribute__((cleanup(osc_deinit_sdk)))
#endif

struct osc_str {
	int len;
	char *buf;
};

#define OSC_ENV_FREE_AK_SK 1
#define OSC_ENV_FREE_REGION 2
#define OSC_VERBOSE_MODE 4
#define OSC_INSECURE_MODE 8

struct osc_env {
	char *ak;
	char *sk;
	char *region;
	int flag;
	struct curl_slist *headers;
	struct osc_str endpoint;
	CURL *c;
};

struct accepter_net {
	char *account_id; /* | string | string | account_id */
	char *ip_range; /* | string | string | ip_range */
	char *net_id; /* | string | string | net_id */
};

struct access_key {
	char *access_key_id; /* | string | string | access_key_id */
	char *creation_date; /* | string | string | creation_date */
	char *expiration_date; /* | string | string | expiration_date */
	char *last_modification_date; /* | string | string | last_modification_date */
	char *state; /* | string | string | state */
};

struct access_key_secret_key {
	char *access_key_id; /* | string | string | access_key_id */
	char *creation_date; /* | string | string | creation_date */
	char *expiration_date; /* | string | string | expiration_date */
	char *last_modification_date; /* | string | string | last_modification_date */
	char *secret_key; /* | string | string | secret_key */
	char *state; /* | string | string | state */
};

struct access_log {
        int is_set_is_enabled;
	int is_enabled; /* | bool | bool | is_enabled */
	char *osu_bucket_name; /* | string | string | osu_bucket_name */
	char *osu_bucket_prefix; /* | string | string | osu_bucket_prefix */
        int is_set_publication_interval;
	int publication_interval; /* | int | int | publication_interval */
};

struct account {
	char *account_id; /* | string | string | account_id */
        char *additional_emails_str;
	char **additional_emails; /* | array string | array string | additional_emails */
	char *city; /* | string | string | city */
	char *company_name; /* | string | string | company_name */
	char *country; /* | string | string | country */
	char *customer_id; /* | string | string | customer_id */
	char *email; /* | string | string | email */
	char *first_name; /* | string | string | first_name */
	char *job_title; /* | string | string | job_title */
	char *last_name; /* | string | string | last_name */
	char *mobile_number; /* | string | string | mobile_number */
	char *phone_number; /* | string | string | phone_number */
	char *state_province; /* | string | string | state_province */
	char *vat_number; /* | string | string | vat_number */
	char *zip_code; /* | string | string | zip_code */
};

struct api_access_policy {
        int is_set_max_access_key_expiration_seconds;
	int max_access_key_expiration_seconds; /* | int | int | max_access_key_expiration_seconds */
        int is_set_require_trusted_env;
	int require_trusted_env; /* | bool | bool | require_trusted_env */
};

struct api_access_rule {
	char *api_access_rule_id; /* | string | string | api_access_rule_id */
        char *ca_ids_str;
	char **ca_ids; /* | array string | array string | ca_ids */
        char *cns_str;
	char **cns; /* | array string | array string | cns */
	char *description; /* | string | string | description */
        char *ip_ranges_str;
	char **ip_ranges; /* | array string | array string | ip_ranges */
};

struct application_sticky_cookie_policy {
	char *cookie_name; /* | string | string | cookie_name */
	char *policy_name; /* | string | string | policy_name */
};

struct backend_vm_health {
	char *description; /* | string | string | description */
	char *state; /* | string | string | state */
	char *state_reason; /* | string | string | state_reason */
	char *vm_id; /* | string | string | vm_id */
};

struct block_device_mapping_created {
	char *bsu; /* | null | null | bsu */
	char *device_name; /* | string | string | device_name */
};

struct block_device_mapping_image {
	char *bsu; /* | null | null | bsu */
	char *device_name; /* | string | string | device_name */
	char *virtual_device_name; /* | string | string | virtual_device_name */
};

struct block_device_mapping_vm_creation {
	char *bsu; /* | null | null | bsu */
	char *device_name; /* | string | string | device_name */
	char *no_device; /* | string | string | no_device */
	char *virtual_device_name; /* | string | string | virtual_device_name */
};

struct block_device_mapping_vm_update {
	char *bsu; /* | null | null | bsu */
	char *device_name; /* | string | string | device_name */
	char *no_device; /* | string | string | no_device */
	char *virtual_device_name; /* | string | string | virtual_device_name */
};

struct bsu_created {
        int is_set_delete_on_vm_deletion;
	int delete_on_vm_deletion; /* | bool | bool | delete_on_vm_deletion */
	char *link_date; /* | string | string | link_date */
	char *state; /* | string | string | state */
	char *volume_id; /* | string | string | volume_id */
};

struct bsu_to_create {
        int is_set_delete_on_vm_deletion;
	int delete_on_vm_deletion; /* | bool | bool | delete_on_vm_deletion */
        int is_set_iops;
	int iops; /* | int | int | iops */
	char *snapshot_id; /* | string | string | snapshot_id */
        int is_set_volume_size;
	int volume_size; /* | int | int | volume_size */
	char *volume_type; /* | string | string | volume_type */
};

struct bsu_to_update_vm {
        int is_set_delete_on_vm_deletion;
	int delete_on_vm_deletion; /* | bool | bool | delete_on_vm_deletion */
	char *volume_id; /* | string | string | volume_id */
};

struct ca {
	char *ca_fingerprint; /* | string | string | ca_fingerprint */
	char *ca_id; /* | string | string | ca_id */
	char *description; /* | string | string | description */
};

struct catalog {
/* type 2 array */
	char *entries; /* | array | array | entries */
};

struct catalog_entry {
	char *category; /* | string | string | category */
	char *flags; /* | string | string | flags */
	char *operation; /* | string | string | operation */
	char *service; /* | string | string | service */
	char *subregion_name; /* | string | string | subregion_name */
	char *title; /* | string | string | title */
	char *type; /* | string | string | type */
	char *unit_price; /* | number | number | unit_price */
};

struct client_gateway {
        int is_set_bgp_asn;
	int bgp_asn; /* | int | int | bgp_asn */
	char *client_gateway_id; /* | string | string | client_gateway_id */
	char *connection_type; /* | string | string | connection_type */
	char *public_ip; /* | string | string | public_ip */
	char *state; /* | string | string | state */
/* type 2 array */
	char *tags; /* | array | array | tags */
};

struct consumption_entry {
	char *account_id; /* | string | string | account_id */
	char *category; /* | string | string | category */
	char *from_date; /* | string | string | from_date */
	char *operation; /* | string | string | operation */
	char *paying_account_id; /* | string | string | paying_account_id */
	char *service; /* | string | string | service */
	char *subregion_name; /* | string | string | subregion_name */
	char *title; /* | string | string | title */
	char *to_date; /* | string | string | to_date */
	char *type; /* | string | string | type */
	char *value; /* | number | number | value */
};

struct dhcp_options_set {
        int is_set_default_arg;
	int default_arg; /* | bool | bool | default_arg */
	char *dhcp_options_set_id; /* | string | string | dhcp_options_set_id */
	char *domain_name; /* | string | string | domain_name */
        char *domain_name_servers_str;
	char **domain_name_servers; /* | array string | array string | domain_name_servers */
        char *log_servers_str;
	char **log_servers; /* | array string | array string | log_servers */
        char *ntp_servers_str;
	char **ntp_servers; /* | array string | array string | ntp_servers */
/* type 2 array */
	char *tags; /* | array | array | tags */
};

struct direct_link {
	char *account_id; /* | string | string | account_id */
	char *bandwidth; /* | string | string | bandwidth */
	char *direct_link_id; /* | string | string | direct_link_id */
	char *direct_link_name; /* | string | string | direct_link_name */
	char *location; /* | string | string | location */
	char *region_name; /* | string | string | region_name */
	char *state; /* | string | string | state */
};

struct direct_link_interface {
        int is_set_bgp_asn;
	int bgp_asn; /* | int | int | bgp_asn */
	char *bgp_key; /* | string | string | bgp_key */
	char *client_private_ip; /* | string | string | client_private_ip */
	char *direct_link_interface_name; /* | string | string | direct_link_interface_name */
	char *outscale_private_ip; /* | string | string | outscale_private_ip */
	char *virtual_gateway_id; /* | string | string | virtual_gateway_id */
        int is_set_vlan;
	int vlan; /* | int | int | vlan */
};

struct direct_link_interfaces {
	char *account_id; /* | string | string | account_id */
        int is_set_bgp_asn;
	int bgp_asn; /* | int | int | bgp_asn */
	char *bgp_key; /* | string | string | bgp_key */
	char *client_private_ip; /* | string | string | client_private_ip */
	char *direct_link_id; /* | string | string | direct_link_id */
	char *direct_link_interface_id; /* | string | string | direct_link_interface_id */
	char *direct_link_interface_name; /* | string | string | direct_link_interface_name */
	char *interface_type; /* | string | string | interface_type */
	char *location; /* | string | string | location */
        int is_set_mtu;
	int mtu; /* | int | int | mtu */
	char *outscale_private_ip; /* | string | string | outscale_private_ip */
	char *state; /* | string | string | state */
	char *virtual_gateway_id; /* | string | string | virtual_gateway_id */
        int is_set_vlan;
	int vlan; /* | int | int | vlan */
};

struct errors {
	char *code; /* | string | string | code */
	char *details; /* | string | string | details */
	char *type; /* | string | string | type */
};

struct filters_access_keys {
        char *access_key_ids_str;
	char **access_key_ids; /* | array string | array string | access_key_ids */
        char *states_str;
	char **states; /* | array string | array string | states */
};

struct filters_api_access_rule {
        char *api_access_rule_ids_str;
	char **api_access_rule_ids; /* | array string | array string | api_access_rule_ids */
        char *ca_ids_str;
	char **ca_ids; /* | array string | array string | ca_ids */
        char *cns_str;
	char **cns; /* | array string | array string | cns */
        char *descriptions_str;
	char **descriptions; /* | array string | array string | descriptions */
        char *ip_ranges_str;
	char **ip_ranges; /* | array string | array string | ip_ranges */
};

struct filters_api_log {
        char *query_access_keys_str;
	char **query_access_keys; /* | array string | array string | query_access_keys */
        char *query_api_names_str;
	char **query_api_names; /* | array string | array string | query_api_names */
        char *query_call_names_str;
	char **query_call_names; /* | array string | array string | query_call_names */
	char *query_date_after; /* | string | string | query_date_after */
	char *query_date_before; /* | string | string | query_date_before */
        char *query_ip_addresses_str;
	char **query_ip_addresses; /* | array string | array string | query_ip_addresses */
        char *query_user_agents_str;
	char **query_user_agents; /* | array string | array string | query_user_agents */
        char *request_ids_str;
	char **request_ids; /* | array string | array string | request_ids */
        char *response_status_codes_str;
	int *response_status_codes; /* | array integer | array integer | response_status_codes */
};

struct filters_ca {
        char *ca_fingerprints_str;
	char **ca_fingerprints; /* | array string | array string | ca_fingerprints */
        char *ca_ids_str;
	char **ca_ids; /* | array string | array string | ca_ids */
        char *descriptions_str;
	char **descriptions; /* | array string | array string | descriptions */
};

struct filters_client_gateway {
        char *bgp_asns_str;
	int *bgp_asns; /* | array integer | array integer | bgp_asns */
        char *client_gateway_ids_str;
	char **client_gateway_ids; /* | array string | array string | client_gateway_ids */
        char *connection_types_str;
	char **connection_types; /* | array string | array string | connection_types */
        char *public_ips_str;
	char **public_ips; /* | array string | array string | public_ips */
        char *states_str;
	char **states; /* | array string | array string | states */
        char *tag_keys_str;
	char **tag_keys; /* | array string | array string | tag_keys */
        char *tag_values_str;
	char **tag_values; /* | array string | array string | tag_values */
        char *tags_str;
	char **tags; /* | array string | array string | tags */
};

struct filters_dhcp_options {
        int is_set_default_arg;
	int default_arg; /* | bool | bool | default_arg */
        char *dhcp_options_set_ids_str;
	char **dhcp_options_set_ids; /* | array string | array string | dhcp_options_set_ids */
        char *domain_name_servers_str;
	char **domain_name_servers; /* | array string | array string | domain_name_servers */
        char *domain_names_str;
	char **domain_names; /* | array string | array string | domain_names */
        char *log_servers_str;
	char **log_servers; /* | array string | array string | log_servers */
        char *ntp_servers_str;
	char **ntp_servers; /* | array string | array string | ntp_servers */
        char *tag_keys_str;
	char **tag_keys; /* | array string | array string | tag_keys */
        char *tag_values_str;
	char **tag_values; /* | array string | array string | tag_values */
        char *tags_str;
	char **tags; /* | array string | array string | tags */
};

struct filters_direct_link {
        char *direct_link_ids_str;
	char **direct_link_ids; /* | array string | array string | direct_link_ids */
};

struct filters_direct_link_interface {
        char *direct_link_ids_str;
	char **direct_link_ids; /* | array string | array string | direct_link_ids */
        char *direct_link_interface_ids_str;
	char **direct_link_interface_ids; /* | array string | array string | direct_link_interface_ids */
};

struct filters_export_task {
        char *task_ids_str;
	char **task_ids; /* | array string | array string | task_ids */
};

struct filters_flexible_gpu {
        int is_set_delete_on_vm_deletion;
	int delete_on_vm_deletion; /* | bool | bool | delete_on_vm_deletion */
        char *flexible_gpu_ids_str;
	char **flexible_gpu_ids; /* | array string | array string | flexible_gpu_ids */
        char *generations_str;
	char **generations; /* | array string | array string | generations */
        char *model_names_str;
	char **model_names; /* | array string | array string | model_names */
        char *states_str;
	char **states; /* | array string | array string | states */
        char *subregion_names_str;
	char **subregion_names; /* | array string | array string | subregion_names */
        char *vm_ids_str;
	char **vm_ids; /* | array string | array string | vm_ids */
};

struct filters_image {
        char *account_aliases_str;
	char **account_aliases; /* | array string | array string | account_aliases */
        char *account_ids_str;
	char **account_ids; /* | array string | array string | account_ids */
        char *architectures_str;
	char **architectures; /* | array string | array string | architectures */
        int is_set_block_device_mapping_delete_on_vm_deletion;
	int block_device_mapping_delete_on_vm_deletion; /* | bool | bool | block_device_mapping_delete_on_vm_deletion */
        char *block_device_mapping_device_names_str;
	char **block_device_mapping_device_names; /* | array string | array string | block_device_mapping_device_names */
        char *block_device_mapping_snapshot_ids_str;
	char **block_device_mapping_snapshot_ids; /* | array string | array string | block_device_mapping_snapshot_ids */
        char *block_device_mapping_volume_sizes_str;
	int *block_device_mapping_volume_sizes; /* | array integer | array integer | block_device_mapping_volume_sizes */
        char *block_device_mapping_volume_types_str;
	char **block_device_mapping_volume_types; /* | array string | array string | block_device_mapping_volume_types */
        char *descriptions_str;
	char **descriptions; /* | array string | array string | descriptions */
        char *file_locations_str;
	char **file_locations; /* | array string | array string | file_locations */
        char *hypervisors_str;
	char **hypervisors; /* | array string | array string | hypervisors */
        char *image_ids_str;
	char **image_ids; /* | array string | array string | image_ids */
        char *image_names_str;
	char **image_names; /* | array string | array string | image_names */
        char *permissions_to_launch_account_ids_str;
	char **permissions_to_launch_account_ids; /* | array string | array string | permissions_to_launch_account_ids */
        int is_set_permissions_to_launch_global_permission;
	int permissions_to_launch_global_permission; /* | bool | bool | permissions_to_launch_global_permission */
        char *product_codes_str;
	char **product_codes; /* | array string | array string | product_codes */
        char *root_device_names_str;
	char **root_device_names; /* | array string | array string | root_device_names */
        char *root_device_types_str;
	char **root_device_types; /* | array string | array string | root_device_types */
        char *states_str;
	char **states; /* | array string | array string | states */
        char *tag_keys_str;
	char **tag_keys; /* | array string | array string | tag_keys */
        char *tag_values_str;
	char **tag_values; /* | array string | array string | tag_values */
        char *tags_str;
	char **tags; /* | array string | array string | tags */
        char *virtualization_types_str;
	char **virtualization_types; /* | array string | array string | virtualization_types */
};

struct filters_internet_service {
        char *internet_service_ids_str;
	char **internet_service_ids; /* | array string | array string | internet_service_ids */
        char *link_net_ids_str;
	char **link_net_ids; /* | array string | array string | link_net_ids */
        char *link_states_str;
	char **link_states; /* | array string | array string | link_states */
        char *tag_keys_str;
	char **tag_keys; /* | array string | array string | tag_keys */
        char *tag_values_str;
	char **tag_values; /* | array string | array string | tag_values */
        char *tags_str;
	char **tags; /* | array string | array string | tags */
};

struct filters_keypair {
        char *keypair_fingerprints_str;
	char **keypair_fingerprints; /* | array string | array string | keypair_fingerprints */
        char *keypair_names_str;
	char **keypair_names; /* | array string | array string | keypair_names */
};

struct filters_listener_rule {
        char *listener_rule_names_str;
	char **listener_rule_names; /* | array string | array string | listener_rule_names */
};

struct filters_load_balancer {
        char *load_balancer_names_str;
	char **load_balancer_names; /* | array string | array string | load_balancer_names */
};

struct filters_nat_service {
        char *nat_service_ids_str;
	char **nat_service_ids; /* | array string | array string | nat_service_ids */
        char *net_ids_str;
	char **net_ids; /* | array string | array string | net_ids */
        char *states_str;
	char **states; /* | array string | array string | states */
        char *subnet_ids_str;
	char **subnet_ids; /* | array string | array string | subnet_ids */
        char *tag_keys_str;
	char **tag_keys; /* | array string | array string | tag_keys */
        char *tag_values_str;
	char **tag_values; /* | array string | array string | tag_values */
        char *tags_str;
	char **tags; /* | array string | array string | tags */
};

struct filters_net {
        char *dhcp_options_set_ids_str;
	char **dhcp_options_set_ids; /* | array string | array string | dhcp_options_set_ids */
        char *ip_ranges_str;
	char **ip_ranges; /* | array string | array string | ip_ranges */
        int is_set_is_default_arg;
	int is_default_arg; /* | bool | bool | is_default_arg */
        char *net_ids_str;
	char **net_ids; /* | array string | array string | net_ids */
        char *states_str;
	char **states; /* | array string | array string | states */
        char *tag_keys_str;
	char **tag_keys; /* | array string | array string | tag_keys */
        char *tag_values_str;
	char **tag_values; /* | array string | array string | tag_values */
        char *tags_str;
	char **tags; /* | array string | array string | tags */
};

struct filters_net_access_point {
        char *net_access_point_ids_str;
	char **net_access_point_ids; /* | array string | array string | net_access_point_ids */
        char *net_ids_str;
	char **net_ids; /* | array string | array string | net_ids */
        char *service_names_str;
	char **service_names; /* | array string | array string | service_names */
        char *states_str;
	char **states; /* | array string | array string | states */
        char *tag_keys_str;
	char **tag_keys; /* | array string | array string | tag_keys */
        char *tag_values_str;
	char **tag_values; /* | array string | array string | tag_values */
        char *tags_str;
	char **tags; /* | array string | array string | tags */
};

struct filters_net_peering {
        char *accepter_net_account_ids_str;
	char **accepter_net_account_ids; /* | array string | array string | accepter_net_account_ids */
        char *accepter_net_ip_ranges_str;
	char **accepter_net_ip_ranges; /* | array string | array string | accepter_net_ip_ranges */
        char *accepter_net_net_ids_str;
	char **accepter_net_net_ids; /* | array string | array string | accepter_net_net_ids */
        char *net_peering_ids_str;
	char **net_peering_ids; /* | array string | array string | net_peering_ids */
        char *source_net_account_ids_str;
	char **source_net_account_ids; /* | array string | array string | source_net_account_ids */
        char *source_net_ip_ranges_str;
	char **source_net_ip_ranges; /* | array string | array string | source_net_ip_ranges */
        char *source_net_net_ids_str;
	char **source_net_net_ids; /* | array string | array string | source_net_net_ids */
        char *state_messages_str;
	char **state_messages; /* | array string | array string | state_messages */
        char *state_names_str;
	char **state_names; /* | array string | array string | state_names */
        char *tag_keys_str;
	char **tag_keys; /* | array string | array string | tag_keys */
        char *tag_values_str;
	char **tag_values; /* | array string | array string | tag_values */
        char *tags_str;
	char **tags; /* | array string | array string | tags */
};

struct filters_nic {
        char *descriptions_str;
	char **descriptions; /* | array string | array string | descriptions */
        int is_set_is_source_dest_check;
	int is_source_dest_check; /* | bool | bool | is_source_dest_check */
        int is_set_link_nic_delete_on_vm_deletion;
	int link_nic_delete_on_vm_deletion; /* | bool | bool | link_nic_delete_on_vm_deletion */
        char *link_nic_device_numbers_str;
	int *link_nic_device_numbers; /* | array integer | array integer | link_nic_device_numbers */
        char *link_nic_link_nic_ids_str;
	char **link_nic_link_nic_ids; /* | array string | array string | link_nic_link_nic_ids */
        char *link_nic_states_str;
	char **link_nic_states; /* | array string | array string | link_nic_states */
        char *link_nic_vm_account_ids_str;
	char **link_nic_vm_account_ids; /* | array string | array string | link_nic_vm_account_ids */
        char *link_nic_vm_ids_str;
	char **link_nic_vm_ids; /* | array string | array string | link_nic_vm_ids */
        char *link_public_ip_account_ids_str;
	char **link_public_ip_account_ids; /* | array string | array string | link_public_ip_account_ids */
        char *link_public_ip_link_public_ip_ids_str;
	char **link_public_ip_link_public_ip_ids; /* | array string | array string | link_public_ip_link_public_ip_ids */
        char *link_public_ip_public_ip_ids_str;
	char **link_public_ip_public_ip_ids; /* | array string | array string | link_public_ip_public_ip_ids */
        char *link_public_ip_public_ips_str;
	char **link_public_ip_public_ips; /* | array string | array string | link_public_ip_public_ips */
        char *mac_addresses_str;
	char **mac_addresses; /* | array string | array string | mac_addresses */
        char *net_ids_str;
	char **net_ids; /* | array string | array string | net_ids */
        char *nic_ids_str;
	char **nic_ids; /* | array string | array string | nic_ids */
        char *private_dns_names_str;
	char **private_dns_names; /* | array string | array string | private_dns_names */
        char *private_ips_link_public_ip_account_ids_str;
	char **private_ips_link_public_ip_account_ids; /* | array string | array string | private_ips_link_public_ip_account_ids */
        char *private_ips_link_public_ip_public_ips_str;
	char **private_ips_link_public_ip_public_ips; /* | array string | array string | private_ips_link_public_ip_public_ips */
        int is_set_private_ips_primary_ip;
	int private_ips_primary_ip; /* | bool | bool | private_ips_primary_ip */
        char *private_ips_private_ips_str;
	char **private_ips_private_ips; /* | array string | array string | private_ips_private_ips */
        char *security_group_ids_str;
	char **security_group_ids; /* | array string | array string | security_group_ids */
        char *security_group_names_str;
	char **security_group_names; /* | array string | array string | security_group_names */
        char *states_str;
	char **states; /* | array string | array string | states */
        char *subnet_ids_str;
	char **subnet_ids; /* | array string | array string | subnet_ids */
        char *subregion_names_str;
	char **subregion_names; /* | array string | array string | subregion_names */
        char *tag_keys_str;
	char **tag_keys; /* | array string | array string | tag_keys */
        char *tag_values_str;
	char **tag_values; /* | array string | array string | tag_values */
        char *tags_str;
	char **tags; /* | array string | array string | tags */
};

struct filters_product_type {
        char *product_type_ids_str;
	char **product_type_ids; /* | array string | array string | product_type_ids */
};

struct filters_public_ip {
        char *link_public_ip_ids_str;
	char **link_public_ip_ids; /* | array string | array string | link_public_ip_ids */
        char *nic_account_ids_str;
	char **nic_account_ids; /* | array string | array string | nic_account_ids */
        char *nic_ids_str;
	char **nic_ids; /* | array string | array string | nic_ids */
        char *placements_str;
	char **placements; /* | array string | array string | placements */
        char *private_ips_str;
	char **private_ips; /* | array string | array string | private_ips */
        char *public_ip_ids_str;
	char **public_ip_ids; /* | array string | array string | public_ip_ids */
        char *public_ips_str;
	char **public_ips; /* | array string | array string | public_ips */
        char *tag_keys_str;
	char **tag_keys; /* | array string | array string | tag_keys */
        char *tag_values_str;
	char **tag_values; /* | array string | array string | tag_values */
        char *tags_str;
	char **tags; /* | array string | array string | tags */
        char *vm_ids_str;
	char **vm_ids; /* | array string | array string | vm_ids */
};

struct filters_quota {
        char *collections_str;
	char **collections; /* | array string | array string | collections */
        char *quota_names_str;
	char **quota_names; /* | array string | array string | quota_names */
        char *quota_types_str;
	char **quota_types; /* | array string | array string | quota_types */
        char *short_descriptions_str;
	char **short_descriptions; /* | array string | array string | short_descriptions */
};

struct filters_route_table {
        char *link_route_table_ids_str;
	char **link_route_table_ids; /* | array string | array string | link_route_table_ids */
        char *link_route_table_link_route_table_ids_str;
	char **link_route_table_link_route_table_ids; /* | array string | array string | link_route_table_link_route_table_ids */
        int is_set_link_route_table_main;
	int link_route_table_main; /* | bool | bool | link_route_table_main */
        char *link_subnet_ids_str;
	char **link_subnet_ids; /* | array string | array string | link_subnet_ids */
        char *net_ids_str;
	char **net_ids; /* | array string | array string | net_ids */
        char *route_creation_methods_str;
	char **route_creation_methods; /* | array string | array string | route_creation_methods */
        char *route_destination_ip_ranges_str;
	char **route_destination_ip_ranges; /* | array string | array string | route_destination_ip_ranges */
        char *route_destination_service_ids_str;
	char **route_destination_service_ids; /* | array string | array string | route_destination_service_ids */
        char *route_gateway_ids_str;
	char **route_gateway_ids; /* | array string | array string | route_gateway_ids */
        char *route_nat_service_ids_str;
	char **route_nat_service_ids; /* | array string | array string | route_nat_service_ids */
        char *route_net_peering_ids_str;
	char **route_net_peering_ids; /* | array string | array string | route_net_peering_ids */
        char *route_states_str;
	char **route_states; /* | array string | array string | route_states */
        char *route_table_ids_str;
	char **route_table_ids; /* | array string | array string | route_table_ids */
        char *route_vm_ids_str;
	char **route_vm_ids; /* | array string | array string | route_vm_ids */
        char *tag_keys_str;
	char **tag_keys; /* | array string | array string | tag_keys */
        char *tag_values_str;
	char **tag_values; /* | array string | array string | tag_values */
        char *tags_str;
	char **tags; /* | array string | array string | tags */
};

struct filters_security_group {
        char *account_ids_str;
	char **account_ids; /* | array string | array string | account_ids */
        char *descriptions_str;
	char **descriptions; /* | array string | array string | descriptions */
        char *inbound_rule_account_ids_str;
	char **inbound_rule_account_ids; /* | array string | array string | inbound_rule_account_ids */
        char *inbound_rule_from_port_ranges_str;
	int *inbound_rule_from_port_ranges; /* | array integer | array integer | inbound_rule_from_port_ranges */
        char *inbound_rule_ip_ranges_str;
	char **inbound_rule_ip_ranges; /* | array string | array string | inbound_rule_ip_ranges */
        char *inbound_rule_protocols_str;
	char **inbound_rule_protocols; /* | array string | array string | inbound_rule_protocols */
        char *inbound_rule_security_group_ids_str;
	char **inbound_rule_security_group_ids; /* | array string | array string | inbound_rule_security_group_ids */
        char *inbound_rule_security_group_names_str;
	char **inbound_rule_security_group_names; /* | array string | array string | inbound_rule_security_group_names */
        char *inbound_rule_to_port_ranges_str;
	int *inbound_rule_to_port_ranges; /* | array integer | array integer | inbound_rule_to_port_ranges */
        char *net_ids_str;
	char **net_ids; /* | array string | array string | net_ids */
        char *outbound_rule_account_ids_str;
	char **outbound_rule_account_ids; /* | array string | array string | outbound_rule_account_ids */
        char *outbound_rule_from_port_ranges_str;
	int *outbound_rule_from_port_ranges; /* | array integer | array integer | outbound_rule_from_port_ranges */
        char *outbound_rule_ip_ranges_str;
	char **outbound_rule_ip_ranges; /* | array string | array string | outbound_rule_ip_ranges */
        char *outbound_rule_protocols_str;
	char **outbound_rule_protocols; /* | array string | array string | outbound_rule_protocols */
        char *outbound_rule_security_group_ids_str;
	char **outbound_rule_security_group_ids; /* | array string | array string | outbound_rule_security_group_ids */
        char *outbound_rule_security_group_names_str;
	char **outbound_rule_security_group_names; /* | array string | array string | outbound_rule_security_group_names */
        char *outbound_rule_to_port_ranges_str;
	int *outbound_rule_to_port_ranges; /* | array integer | array integer | outbound_rule_to_port_ranges */
        char *security_group_ids_str;
	char **security_group_ids; /* | array string | array string | security_group_ids */
        char *security_group_names_str;
	char **security_group_names; /* | array string | array string | security_group_names */
        char *tag_keys_str;
	char **tag_keys; /* | array string | array string | tag_keys */
        char *tag_values_str;
	char **tag_values; /* | array string | array string | tag_values */
        char *tags_str;
	char **tags; /* | array string | array string | tags */
};

struct filters_server_certificate {
        char *paths_str;
	char **paths; /* | array string | array string | paths */
};

struct filters_service {
        char *service_ids_str;
	char **service_ids; /* | array string | array string | service_ids */
        char *service_names_str;
	char **service_names; /* | array string | array string | service_names */
};

struct filters_snapshot {
        char *account_aliases_str;
	char **account_aliases; /* | array string | array string | account_aliases */
        char *account_ids_str;
	char **account_ids; /* | array string | array string | account_ids */
        char *descriptions_str;
	char **descriptions; /* | array string | array string | descriptions */
        char *permissions_to_create_volume_account_ids_str;
	char **permissions_to_create_volume_account_ids; /* | array string | array string | permissions_to_create_volume_account_ids */
        int is_set_permissions_to_create_volume_global_permission;
	int permissions_to_create_volume_global_permission; /* | bool | bool | permissions_to_create_volume_global_permission */
        char *progresses_str;
	int *progresses; /* | array integer | array integer | progresses */
        char *snapshot_ids_str;
	char **snapshot_ids; /* | array string | array string | snapshot_ids */
        char *states_str;
	char **states; /* | array string | array string | states */
        char *tag_keys_str;
	char **tag_keys; /* | array string | array string | tag_keys */
        char *tag_values_str;
	char **tag_values; /* | array string | array string | tag_values */
        char *tags_str;
	char **tags; /* | array string | array string | tags */
        char *volume_ids_str;
	char **volume_ids; /* | array string | array string | volume_ids */
        char *volume_sizes_str;
	int *volume_sizes; /* | array integer | array integer | volume_sizes */
};

struct filters_subnet {
        char *available_ips_counts_str;
	int *available_ips_counts; /* | array integer | array integer | available_ips_counts */
        char *ip_ranges_str;
	char **ip_ranges; /* | array string | array string | ip_ranges */
        char *net_ids_str;
	char **net_ids; /* | array string | array string | net_ids */
        char *states_str;
	char **states; /* | array string | array string | states */
        char *subnet_ids_str;
	char **subnet_ids; /* | array string | array string | subnet_ids */
        char *subregion_names_str;
	char **subregion_names; /* | array string | array string | subregion_names */
        char *tag_keys_str;
	char **tag_keys; /* | array string | array string | tag_keys */
        char *tag_values_str;
	char **tag_values; /* | array string | array string | tag_values */
        char *tags_str;
	char **tags; /* | array string | array string | tags */
};

struct filters_subregion {
        char *subregion_names_str;
	char **subregion_names; /* | array string | array string | subregion_names */
};

struct filters_tag {
        char *keys_str;
	char **keys; /* | array string | array string | keys */
        char *resource_ids_str;
	char **resource_ids; /* | array string | array string | resource_ids */
        char *resource_types_str;
	char **resource_types; /* | array string | array string | resource_types */
        char *values_str;
	char **values; /* | array string | array string | values */
};

struct filters_virtual_gateway {
        char *connection_types_str;
	char **connection_types; /* | array string | array string | connection_types */
        char *link_net_ids_str;
	char **link_net_ids; /* | array string | array string | link_net_ids */
        char *link_states_str;
	char **link_states; /* | array string | array string | link_states */
        char *states_str;
	char **states; /* | array string | array string | states */
        char *tag_keys_str;
	char **tag_keys; /* | array string | array string | tag_keys */
        char *tag_values_str;
	char **tag_values; /* | array string | array string | tag_values */
        char *tags_str;
	char **tags; /* | array string | array string | tags */
        char *virtual_gateway_ids_str;
	char **virtual_gateway_ids; /* | array string | array string | virtual_gateway_ids */
};

struct filters_vm {
        char *tag_keys_str;
	char **tag_keys; /* | array string | array string | tag_keys */
        char *tag_values_str;
	char **tag_values; /* | array string | array string | tag_values */
        char *tags_str;
	char **tags; /* | array string | array string | tags */
        char *vm_ids_str;
	char **vm_ids; /* | array string | array string | vm_ids */
};

struct filters_vm_type {
        int is_set_bsu_optimized;
	int bsu_optimized; /* | bool | bool | bsu_optimized */
/* type 2 array */
	char *memory_sizes; /* | array | array | memory_sizes */
        char *vcore_counts_str;
	int *vcore_counts; /* | array integer | array integer | vcore_counts */
        char *vm_type_names_str;
	char **vm_type_names; /* | array string | array string | vm_type_names */
        char *volume_counts_str;
	int *volume_counts; /* | array integer | array integer | volume_counts */
        char *volume_sizes_str;
	int *volume_sizes; /* | array integer | array integer | volume_sizes */
};

struct filters_vms_state {
        char *maintenance_event_codes_str;
	char **maintenance_event_codes; /* | array string | array string | maintenance_event_codes */
        char *maintenance_event_descriptions_str;
	char **maintenance_event_descriptions; /* | array string | array string | maintenance_event_descriptions */
        char *maintenance_events_not_after_str;
	char **maintenance_events_not_after; /* | array string | array string | maintenance_events_not_after */
        char *maintenance_events_not_before_str;
	char **maintenance_events_not_before; /* | array string | array string | maintenance_events_not_before */
        char *subregion_names_str;
	char **subregion_names; /* | array string | array string | subregion_names */
        char *vm_ids_str;
	char **vm_ids; /* | array string | array string | vm_ids */
        char *vm_states_str;
	char **vm_states; /* | array string | array string | vm_states */
};

struct filters_volume {
        char *creation_dates_str;
	char **creation_dates; /* | array string | array string | creation_dates */
        int is_set_link_volume_delete_on_vm_deletion;
	int link_volume_delete_on_vm_deletion; /* | bool | bool | link_volume_delete_on_vm_deletion */
        char *link_volume_device_names_str;
	char **link_volume_device_names; /* | array string | array string | link_volume_device_names */
        char *link_volume_link_dates_str;
	char **link_volume_link_dates; /* | array string | array string | link_volume_link_dates */
        char *link_volume_link_states_str;
	char **link_volume_link_states; /* | array string | array string | link_volume_link_states */
        char *link_volume_vm_ids_str;
	char **link_volume_vm_ids; /* | array string | array string | link_volume_vm_ids */
        char *snapshot_ids_str;
	char **snapshot_ids; /* | array string | array string | snapshot_ids */
        char *subregion_names_str;
	char **subregion_names; /* | array string | array string | subregion_names */
        char *tag_keys_str;
	char **tag_keys; /* | array string | array string | tag_keys */
        char *tag_values_str;
	char **tag_values; /* | array string | array string | tag_values */
        char *tags_str;
	char **tags; /* | array string | array string | tags */
        char *volume_ids_str;
	char **volume_ids; /* | array string | array string | volume_ids */
        char *volume_sizes_str;
	int *volume_sizes; /* | array integer | array integer | volume_sizes */
        char *volume_states_str;
	char **volume_states; /* | array string | array string | volume_states */
        char *volume_types_str;
	char **volume_types; /* | array string | array string | volume_types */
};

struct filters_vpn_connection {
        char *bgp_asns_str;
	int *bgp_asns; /* | array integer | array integer | bgp_asns */
        char *client_gateway_ids_str;
	char **client_gateway_ids; /* | array string | array string | client_gateway_ids */
        char *connection_types_str;
	char **connection_types; /* | array string | array string | connection_types */
        char *route_destination_ip_ranges_str;
	char **route_destination_ip_ranges; /* | array string | array string | route_destination_ip_ranges */
        char *states_str;
	char **states; /* | array string | array string | states */
        int is_set_static_routes_only;
	int static_routes_only; /* | bool | bool | static_routes_only */
        char *tag_keys_str;
	char **tag_keys; /* | array string | array string | tag_keys */
        char *tag_values_str;
	char **tag_values; /* | array string | array string | tag_values */
        char *tags_str;
	char **tags; /* | array string | array string | tags */
        char *virtual_gateway_ids_str;
	char **virtual_gateway_ids; /* | array string | array string | virtual_gateway_ids */
        char *vpn_connection_ids_str;
	char **vpn_connection_ids; /* | array string | array string | vpn_connection_ids */
};

struct flexible_gpu {
        int is_set_delete_on_vm_deletion;
	int delete_on_vm_deletion; /* | bool | bool | delete_on_vm_deletion */
	char *flexible_gpu_id; /* | string | string | flexible_gpu_id */
	char *generation; /* | string | string | generation */
	char *model_name; /* | string | string | model_name */
	char *state; /* | string | string | state */
	char *subregion_name; /* | string | string | subregion_name */
	char *vm_id; /* | string | string | vm_id */
};

struct flexible_gpu_catalog {
        char *generations_str;
	char **generations; /* | array string | array string | generations */
        int is_set_max_cpu;
	int max_cpu; /* | int | int | max_cpu */
        int is_set_max_ram;
	int max_ram; /* | int | int | max_ram */
	char *model_name; /* | string | string | model_name */
        int is_set_vram;
	int vram; /* | int | int | vram */
};

struct health_check {
        int is_set_check_interval;
	int check_interval; /* | int | int | check_interval */
        int is_set_healthy_threshold;
	int healthy_threshold; /* | int | int | healthy_threshold */
	char *path; /* | string | string | path */
        int is_set_port;
	int port; /* | int | int | port */
	char *protocol; /* | string | string | protocol */
        int is_set_timeout;
	int timeout; /* | int | int | timeout */
        int is_set_unhealthy_threshold;
	int unhealthy_threshold; /* | int | int | unhealthy_threshold */
};

struct image {
	char *account_alias; /* | string | string | account_alias */
	char *account_id; /* | string | string | account_id */
	char *architecture; /* | string | string | architecture */
/* type 2 array */
	char *block_device_mappings; /* | array | array | block_device_mappings */
	char *creation_date; /* | string | string | creation_date */
	char *description; /* | string | string | description */
	char *file_location; /* | string | string | file_location */
	char *image_id; /* | string | string | image_id */
	char *image_name; /* | string | string | image_name */
	char *image_type; /* | string | string | image_type */
	char *permissions_to_launch; /* | null | null | permissions_to_launch */
        char *product_codes_str;
	char **product_codes; /* | array string | array string | product_codes */
	char *root_device_name; /* | string | string | root_device_name */
	char *root_device_type; /* | string | string | root_device_type */
	char *state; /* | string | string | state */
	char *state_comment; /* | null | null | state_comment */
/* type 2 array */
	char *tags; /* | array | array | tags */
};

struct image_export_task {
	char *comment; /* | string | string | comment */
	char *image_id; /* | string | string | image_id */
	char *osu_export; /* | null | null | osu_export */
        int is_set_progress;
	int progress; /* | int | int | progress */
	char *state; /* | string | string | state */
/* type 2 array */
	char *tags; /* | array | array | tags */
	char *task_id; /* | string | string | task_id */
};

struct internet_service {
	char *internet_service_id; /* | string | string | internet_service_id */
	char *net_id; /* | string | string | net_id */
	char *state; /* | string | string | state */
/* type 2 array */
	char *tags; /* | array | array | tags */
};

struct keypair {
	char *keypair_fingerprint; /* | string | string | keypair_fingerprint */
	char *keypair_name; /* | string | string | keypair_name */
};

struct keypair_created {
	char *keypair_fingerprint; /* | string | string | keypair_fingerprint */
	char *keypair_name; /* | string | string | keypair_name */
	char *private_key; /* | string | string | private_key */
};

struct link_nic {
        int is_set_delete_on_vm_deletion;
	int delete_on_vm_deletion; /* | bool | bool | delete_on_vm_deletion */
        int is_set_device_number;
	int device_number; /* | int | int | device_number */
	char *link_nic_id; /* | string | string | link_nic_id */
	char *state; /* | string | string | state */
	char *vm_account_id; /* | string | string | vm_account_id */
	char *vm_id; /* | string | string | vm_id */
};

struct link_nic_light {
        int is_set_delete_on_vm_deletion;
	int delete_on_vm_deletion; /* | bool | bool | delete_on_vm_deletion */
        int is_set_device_number;
	int device_number; /* | int | int | device_number */
	char *link_nic_id; /* | string | string | link_nic_id */
	char *state; /* | string | string | state */
};

struct link_nic_to_update {
        int is_set_delete_on_vm_deletion;
	int delete_on_vm_deletion; /* | bool | bool | delete_on_vm_deletion */
	char *link_nic_id; /* | string | string | link_nic_id */
};

struct link_public_ip {
	char *link_public_ip_id; /* | string | string | link_public_ip_id */
	char *public_dns_name; /* | string | string | public_dns_name */
	char *public_ip; /* | string | string | public_ip */
	char *public_ip_account_id; /* | string | string | public_ip_account_id */
	char *public_ip_id; /* | string | string | public_ip_id */
};

struct link_public_ip_light_for_vm {
	char *public_dns_name; /* | string | string | public_dns_name */
	char *public_ip; /* | string | string | public_ip */
	char *public_ip_account_id; /* | string | string | public_ip_account_id */
};

struct link_route_table {
	char *link_route_table_id; /* | string | string | link_route_table_id */
        int is_set_main;
	int main; /* | bool | bool | main */
	char *route_table_id; /* | string | string | route_table_id */
	char *subnet_id; /* | string | string | subnet_id */
};

struct linked_volume {
        int is_set_delete_on_vm_deletion;
	int delete_on_vm_deletion; /* | bool | bool | delete_on_vm_deletion */
	char *device_name; /* | string | string | device_name */
	char *state; /* | string | string | state */
	char *vm_id; /* | string | string | vm_id */
	char *volume_id; /* | string | string | volume_id */
};

struct listener {
        int is_set_backend_port;
	int backend_port; /* | int | int | backend_port */
	char *backend_protocol; /* | string | string | backend_protocol */
        int is_set_load_balancer_port;
	int load_balancer_port; /* | int | int | load_balancer_port */
	char *load_balancer_protocol; /* | string | string | load_balancer_protocol */
        char *policy_names_str;
	char **policy_names; /* | array string | array string | policy_names */
	char *server_certificate_id; /* | string | string | server_certificate_id */
};

struct listener_for_creation {
        int is_set_backend_port;
	int backend_port; /* | int | int | backend_port */
	char *backend_protocol; /* | string | string | backend_protocol */
        int is_set_load_balancer_port;
	int load_balancer_port; /* | int | int | load_balancer_port */
	char *load_balancer_protocol; /* | string | string | load_balancer_protocol */
	char *server_certificate_id; /* | string | string | server_certificate_id */
};

struct listener_rule {
	char *action; /* | string | string | action */
	char *host_name_pattern; /* | string | string | host_name_pattern */
        int is_set_listener_id;
	int listener_id; /* | int | int | listener_id */
        int is_set_listener_rule_id;
	int listener_rule_id; /* | int | int | listener_rule_id */
	char *listener_rule_name; /* | string | string | listener_rule_name */
	char *path_pattern; /* | string | string | path_pattern */
        int is_set_priority;
	int priority; /* | int | int | priority */
        char *vm_ids_str;
	char **vm_ids; /* | array string | array string | vm_ids */
};

struct listener_rule_for_creation {
	char *action; /* | string | string | action */
	char *host_name_pattern; /* | string | string | host_name_pattern */
	char *listener_rule_name; /* | string | string | listener_rule_name */
	char *path_pattern; /* | string | string | path_pattern */
        int is_set_priority;
	int priority; /* | int | int | priority */
};

struct load_balancer {
	char *access_log; /* | null | null | access_log */
/* type 2 array */
	char *application_sticky_cookie_policies; /* | array | array | application_sticky_cookie_policies */
        char *backend_ips_str;
	char **backend_ips; /* | array string | array string | backend_ips */
        char *backend_vm_ids_str;
	char **backend_vm_ids; /* | array string | array string | backend_vm_ids */
	char *dns_name; /* | string | string | dns_name */
	char *health_check; /* | null | null | health_check */
/* type 2 array */
	char *listeners; /* | array | array | listeners */
	char *load_balancer_name; /* | string | string | load_balancer_name */
/* type 2 array */
	char *load_balancer_sticky_cookie_policies; /* | array | array | load_balancer_sticky_cookie_policies */
	char *load_balancer_type; /* | string | string | load_balancer_type */
	char *net_id; /* | string | string | net_id */
	char *public_ip; /* | string | string | public_ip */
        int is_set_secured_cookies;
	int secured_cookies; /* | bool | bool | secured_cookies */
        char *security_groups_str;
	char **security_groups; /* | array string | array string | security_groups */
	char *source_security_group; /* | null | null | source_security_group */
        char *subnets_str;
	char **subnets; /* | array string | array string | subnets */
        char *subregion_names_str;
	char **subregion_names; /* | array string | array string | subregion_names */
/* type 2 array */
	char *tags; /* | array | array | tags */
};

struct load_balancer_light {
	char *load_balancer_name; /* | string | string | load_balancer_name */
        int is_set_load_balancer_port;
	int load_balancer_port; /* | int | int | load_balancer_port */
};

struct load_balancer_sticky_cookie_policy {
        int is_set_cookie_expiration_period;
	int cookie_expiration_period; /* | int | int | cookie_expiration_period */
	char *policy_name; /* | string | string | policy_name */
};

struct load_balancer_tag {
	char *key; /* | string | string | key */
	char *load_balancer_name; /* | string | string | load_balancer_name */
	char *value; /* | string | string | value */
};

struct location {
	char *code; /* | string | string | code */
	char *name; /* | string | string | name */
};

struct log {
	char *account_id; /* | string | string | account_id */
        int is_set_call_duration;
	int call_duration; /* | int | int | call_duration */
	char *query_access_key; /* | string | string | query_access_key */
	char *query_api_name; /* | string | string | query_api_name */
	char *query_api_version; /* | string | string | query_api_version */
	char *query_call_name; /* | string | string | query_call_name */
	char *query_date; /* | string | string | query_date */
	char *query_header_raw; /* | string | string | query_header_raw */
        int is_set_query_header_size;
	int query_header_size; /* | int | int | query_header_size */
	char *query_ip_address; /* | string | string | query_ip_address */
	char *query_payload_raw; /* | string | string | query_payload_raw */
        int is_set_query_payload_size;
	int query_payload_size; /* | int | int | query_payload_size */
	char *query_user_agent; /* | string | string | query_user_agent */
	char *request_id; /* | string | string | request_id */
        int is_set_response_size;
	int response_size; /* | int | int | response_size */
        int is_set_response_status_code;
	int response_status_code; /* | int | int | response_status_code */
};

struct maintenance_event {
	char *code; /* | string | string | code */
	char *description; /* | string | string | description */
	char *not_after; /* | string | string | not_after */
	char *not_before; /* | string | string | not_before */
};

struct nat_service {
	char *nat_service_id; /* | string | string | nat_service_id */
	char *net_id; /* | string | string | net_id */
/* type 2 array */
	char *public_ips; /* | array | array | public_ips */
	char *state; /* | string | string | state */
	char *subnet_id; /* | string | string | subnet_id */
/* type 2 array */
	char *tags; /* | array | array | tags */
};

struct net {
	char *dhcp_options_set_id; /* | string | string | dhcp_options_set_id */
	char *ip_range; /* | string | string | ip_range */
	char *net_id; /* | string | string | net_id */
	char *state; /* | string | string | state */
/* type 2 array */
	char *tags; /* | array | array | tags */
	char *tenancy; /* | string | string | tenancy */
};

struct net_access_point {
	char *net_access_point_id; /* | string | string | net_access_point_id */
	char *net_id; /* | string | string | net_id */
        char *route_table_ids_str;
	char **route_table_ids; /* | array string | array string | route_table_ids */
	char *service_name; /* | string | string | service_name */
	char *state; /* | string | string | state */
/* type 2 array */
	char *tags; /* | array | array | tags */
};

struct net_peering {
	char *accepter_net; /* | null | null | accepter_net */
	char *net_peering_id; /* | string | string | net_peering_id */
	char *source_net; /* | null | null | source_net */
	char *state; /* | null | null | state */
/* type 2 array */
	char *tags; /* | array | array | tags */
};

struct net_peering_state {
	char *message; /* | string | string | message */
	char *name; /* | string | string | name */
};

struct net_to_virtual_gateway_link {
	char *net_id; /* | string | string | net_id */
	char *state; /* | string | string | state */
};

struct nic {
	char *account_id; /* | string | string | account_id */
	char *description; /* | string | string | description */
        int is_set_is_source_dest_checked;
	int is_source_dest_checked; /* | bool | bool | is_source_dest_checked */
	char *link_nic; /* | null | null | link_nic */
	char *link_public_ip; /* | null | null | link_public_ip */
	char *mac_address; /* | string | string | mac_address */
	char *net_id; /* | string | string | net_id */
	char *nic_id; /* | string | string | nic_id */
	char *private_dns_name; /* | string | string | private_dns_name */
/* type 2 array */
	char *private_ips; /* | array | array | private_ips */
/* type 2 array */
	char *security_groups; /* | array | array | security_groups */
	char *state; /* | string | string | state */
	char *subnet_id; /* | string | string | subnet_id */
	char *subregion_name; /* | string | string | subregion_name */
/* type 2 array */
	char *tags; /* | array | array | tags */
};

struct nic_for_vm_creation {
        int is_set_delete_on_vm_deletion;
	int delete_on_vm_deletion; /* | bool | bool | delete_on_vm_deletion */
	char *description; /* | string | string | description */
        int is_set_device_number;
	int device_number; /* | int | int | device_number */
	char *nic_id; /* | string | string | nic_id */
/* type 2 array */
	char *private_ips; /* | array | array | private_ips */
        int is_set_secondary_private_ip_count;
	int secondary_private_ip_count; /* | int | int | secondary_private_ip_count */
        char *security_group_ids_str;
	char **security_group_ids; /* | array string | array string | security_group_ids */
	char *subnet_id; /* | string | string | subnet_id */
};

struct nic_light {
	char *account_id; /* | string | string | account_id */
	char *description; /* | string | string | description */
        int is_set_is_source_dest_checked;
	int is_source_dest_checked; /* | bool | bool | is_source_dest_checked */
	char *link_nic; /* | null | null | link_nic */
	char *link_public_ip; /* | null | null | link_public_ip */
	char *mac_address; /* | string | string | mac_address */
	char *net_id; /* | string | string | net_id */
	char *nic_id; /* | string | string | nic_id */
	char *private_dns_name; /* | string | string | private_dns_name */
/* type 2 array */
	char *private_ips; /* | array | array | private_ips */
/* type 2 array */
	char *security_groups; /* | array | array | security_groups */
	char *state; /* | string | string | state */
	char *subnet_id; /* | string | string | subnet_id */
};

struct osu_api_key {
	char *api_key_id; /* | string | string | api_key_id */
	char *secret_key; /* | string | string | secret_key */
};

struct osu_export_image_export_task {
	char *disk_image_format; /* | string | string | disk_image_format */
	char *osu_bucket; /* | string | string | osu_bucket */
	char *osu_manifest_url; /* | string | string | osu_manifest_url */
	char *osu_prefix; /* | string | string | osu_prefix */
};

struct osu_export_snapshot_export_task {
	char *disk_image_format; /* | string | string | disk_image_format */
	char *osu_bucket; /* | string | string | osu_bucket */
	char *osu_prefix; /* | string | string | osu_prefix */
};

struct osu_export_to_create {
	char *disk_image_format; /* | string | string | disk_image_format */
	char *osu_api_key; /* | null | null | osu_api_key */
	char *osu_bucket; /* | string | string | osu_bucket */
	char *osu_manifest_url; /* | string | string | osu_manifest_url */
	char *osu_prefix; /* | string | string | osu_prefix */
};

struct permissions_on_resource {
        char *account_ids_str;
	char **account_ids; /* | array string | array string | account_ids */
        int is_set_global_permission;
	int global_permission; /* | bool | bool | global_permission */
};

struct permissions_on_resource_creation {
	char *additions; /* | null | null | additions */
	char *removals; /* | null | null | removals */
};

struct phase1_options {
	char *dpd_timeout_action; /* | string | string | dpd_timeout_action */
        int is_set_dpd_timeout_seconds;
	int dpd_timeout_seconds; /* | int | int | dpd_timeout_seconds */
        char *ike_versions_str;
	char **ike_versions; /* | array string | array string | ike_versions */
        char *phase1_dh_group_numbers_str;
	int *phase1_dh_group_numbers; /* | array integer | array integer | phase1_dh_group_numbers */
        char *phase1_encryption_algorithms_str;
	char **phase1_encryption_algorithms; /* | array string | array string | phase1_encryption_algorithms */
        char *phase1_integrity_algorithms_str;
	char **phase1_integrity_algorithms; /* | array string | array string | phase1_integrity_algorithms */
        int is_set_phase1_lifetime_seconds;
	int phase1_lifetime_seconds; /* | int | int | phase1_lifetime_seconds */
        int is_set_replay_window_size;
	int replay_window_size; /* | int | int | replay_window_size */
	char *startup_action; /* | string | string | startup_action */
};

struct phase2_options {
        char *phase2_dh_group_numbers_str;
	int *phase2_dh_group_numbers; /* | array integer | array integer | phase2_dh_group_numbers */
        char *phase2_encryption_algorithms_str;
	char **phase2_encryption_algorithms; /* | array string | array string | phase2_encryption_algorithms */
        char *phase2_integrity_algorithms_str;
	char **phase2_integrity_algorithms; /* | array string | array string | phase2_integrity_algorithms */
        int is_set_phase2_lifetime_seconds;
	int phase2_lifetime_seconds; /* | int | int | phase2_lifetime_seconds */
	char *pre_shared_key; /* | string | string | pre_shared_key */
};

struct placement {
	char *subregion_name; /* | string | string | subregion_name */
	char *tenancy; /* | string | string | tenancy */
};

struct private_ip {
        int is_set_is_primary;
	int is_primary; /* | bool | bool | is_primary */
	char *link_public_ip; /* | null | null | link_public_ip */
	char *private_dns_name; /* | string | string | private_dns_name */
	char *private_ip; /* | string | string | private_ip */
};

struct private_ip_light {
        int is_set_is_primary;
	int is_primary; /* | bool | bool | is_primary */
	char *private_ip; /* | string | string | private_ip */
};

struct private_ip_light_for_vm {
        int is_set_is_primary;
	int is_primary; /* | bool | bool | is_primary */
	char *link_public_ip; /* | null | null | link_public_ip */
	char *private_dns_name; /* | string | string | private_dns_name */
	char *private_ip; /* | string | string | private_ip */
};

struct product_type {
	char *description; /* | string | string | description */
	char *product_type_id; /* | string | string | product_type_id */
	char *vendor; /* | string | string | vendor */
};

struct public_ip {
	char *link_public_ip_id; /* | string | string | link_public_ip_id */
	char *nic_account_id; /* | string | string | nic_account_id */
	char *nic_id; /* | string | string | nic_id */
	char *private_ip; /* | string | string | private_ip */
	char *public_ip; /* | string | string | public_ip */
	char *public_ip_id; /* | string | string | public_ip_id */
/* type 2 array */
	char *tags; /* | array | array | tags */
	char *vm_id; /* | string | string | vm_id */
};

struct public_ip_light {
	char *public_ip; /* | string | string | public_ip */
	char *public_ip_id; /* | string | string | public_ip_id */
};

struct quota {
	char *account_id; /* | string | string | account_id */
	char *description; /* | string | string | description */
        int is_set_max_value;
	int max_value; /* | int | int | max_value */
	char *name; /* | string | string | name */
	char *quota_collection; /* | string | string | quota_collection */
	char *short_description; /* | string | string | short_description */
        int is_set_used_value;
	int used_value; /* | int | int | used_value */
};

struct quota_types {
	char *quota_type; /* | string | string | quota_type */
/* type 2 array */
	char *quotas; /* | array | array | quotas */
};

struct region {
	char *endpoint; /* | string | string | endpoint */
	char *region_name; /* | string | string | region_name */
};

struct resource_load_balancer_tag {
	char *key; /* | string | string | key */
};

struct resource_tag {
	char *key; /* | string | string | key */
	char *value; /* | string | string | value */
};

struct route {
	char *creation_method; /* | string | string | creation_method */
	char *destination_ip_range; /* | string | string | destination_ip_range */
	char *destination_service_id; /* | string | string | destination_service_id */
	char *gateway_id; /* | string | string | gateway_id */
	char *nat_service_id; /* | string | string | nat_service_id */
	char *net_access_point_id; /* | string | string | net_access_point_id */
	char *net_peering_id; /* | string | string | net_peering_id */
	char *nic_id; /* | string | string | nic_id */
	char *state; /* | string | string | state */
	char *vm_account_id; /* | string | string | vm_account_id */
	char *vm_id; /* | string | string | vm_id */
};

struct route_light {
	char *destination_ip_range; /* | string | string | destination_ip_range */
	char *route_type; /* | string | string | route_type */
	char *state; /* | string | string | state */
};

struct route_propagating_virtual_gateway {
	char *virtual_gateway_id; /* | string | string | virtual_gateway_id */
};

struct route_table {
/* type 2 array */
	char *link_route_tables; /* | array | array | link_route_tables */
	char *net_id; /* | string | string | net_id */
/* type 2 array */
	char *route_propagating_virtual_gateways; /* | array | array | route_propagating_virtual_gateways */
	char *route_table_id; /* | string | string | route_table_id */
/* type 2 array */
	char *routes; /* | array | array | routes */
/* type 2 array */
	char *tags; /* | array | array | tags */
};

struct security_group {
	char *account_id; /* | string | string | account_id */
	char *description; /* | string | string | description */
/* type 2 array */
	char *inbound_rules; /* | array | array | inbound_rules */
	char *net_id; /* | string | string | net_id */
/* type 2 array */
	char *outbound_rules; /* | array | array | outbound_rules */
	char *security_group_id; /* | string | string | security_group_id */
	char *security_group_name; /* | string | string | security_group_name */
/* type 2 array */
	char *tags; /* | array | array | tags */
};

struct security_group_light {
	char *security_group_id; /* | string | string | security_group_id */
	char *security_group_name; /* | string | string | security_group_name */
};

struct security_group_rule {
        int is_set_from_port_range;
	int from_port_range; /* | int | int | from_port_range */
	char *ip_protocol; /* | string | string | ip_protocol */
        char *ip_ranges_str;
	char **ip_ranges; /* | array string | array string | ip_ranges */
/* type 2 array */
	char *security_groups_members; /* | array | array | security_groups_members */
        char *service_ids_str;
	char **service_ids; /* | array string | array string | service_ids */
        int is_set_to_port_range;
	int to_port_range; /* | int | int | to_port_range */
};

struct security_groups_member {
	char *account_id; /* | string | string | account_id */
	char *security_group_id; /* | string | string | security_group_id */
	char *security_group_name; /* | string | string | security_group_name */
};

struct server_certificate {
	char *expiration_date; /* | string | string | expiration_date */
	char *id; /* | string | string | id */
	char *name; /* | string | string | name */
	char *orn; /* | string | string | orn */
	char *path; /* | string | string | path */
	char *upload_date; /* | string | string | upload_date */
};

struct service {
        char *ip_ranges_str;
	char **ip_ranges; /* | array string | array string | ip_ranges */
	char *service_id; /* | string | string | service_id */
	char *service_name; /* | string | string | service_name */
};

struct snapshot {
	char *account_alias; /* | string | string | account_alias */
	char *account_id; /* | string | string | account_id */
	char *creation_date; /* | string | string | creation_date */
	char *description; /* | string | string | description */
	char *permissions_to_create_volume; /* | null | null | permissions_to_create_volume */
        int is_set_progress;
	int progress; /* | int | int | progress */
	char *snapshot_id; /* | string | string | snapshot_id */
	char *state; /* | string | string | state */
/* type 2 array */
	char *tags; /* | array | array | tags */
	char *volume_id; /* | string | string | volume_id */
        int is_set_volume_size;
	int volume_size; /* | int | int | volume_size */
};

struct snapshot_export_task {
	char *comment; /* | string | string | comment */
	char *osu_export; /* | null | null | osu_export */
        int is_set_progress;
	int progress; /* | int | int | progress */
	char *snapshot_id; /* | string | string | snapshot_id */
	char *state; /* | string | string | state */
/* type 2 array */
	char *tags; /* | array | array | tags */
	char *task_id; /* | string | string | task_id */
};

struct source_net {
	char *account_id; /* | string | string | account_id */
	char *ip_range; /* | string | string | ip_range */
	char *net_id; /* | string | string | net_id */
};

struct source_security_group {
	char *security_group_account_id; /* | string | string | security_group_account_id */
	char *security_group_name; /* | string | string | security_group_name */
};

struct state_comment {
	char *state_code; /* | string | string | state_code */
	char *state_message; /* | string | string | state_message */
};

struct subnet {
        int is_set_available_ips_count;
	int available_ips_count; /* | int | int | available_ips_count */
	char *ip_range; /* | string | string | ip_range */
        int is_set_map_public_ip_on_launch;
	int map_public_ip_on_launch; /* | bool | bool | map_public_ip_on_launch */
	char *net_id; /* | string | string | net_id */
	char *state; /* | string | string | state */
	char *subnet_id; /* | string | string | subnet_id */
	char *subregion_name; /* | string | string | subregion_name */
/* type 2 array */
	char *tags; /* | array | array | tags */
};

struct subregion {
	char *location_code; /* | string | string | location_code */
	char *region_name; /* | string | string | region_name */
	char *state; /* | string | string | state */
	char *subregion_name; /* | string | string | subregion_name */
};

struct tag {
	char *key; /* | string | string | key */
	char *resource_id; /* | string | string | resource_id */
	char *resource_type; /* | string | string | resource_type */
	char *value; /* | string | string | value */
};

struct vgw_telemetry {
        int is_set_accepted_route_count;
	int accepted_route_count; /* | int | int | accepted_route_count */
	char *last_state_change_date; /* | string | string | last_state_change_date */
	char *outside_ip_address; /* | string | string | outside_ip_address */
	char *state; /* | string | string | state */
	char *state_description; /* | string | string | state_description */
};

struct virtual_gateway {
	char *connection_type; /* | string | string | connection_type */
/* type 2 array */
	char *net_to_virtual_gateway_links; /* | array | array | net_to_virtual_gateway_links */
	char *state; /* | string | string | state */
/* type 2 array */
	char *tags; /* | array | array | tags */
	char *virtual_gateway_id; /* | string | string | virtual_gateway_id */
};

struct vm {
	char *architecture; /* | string | string | architecture */
/* type 2 array */
	char *block_device_mappings; /* | array | array | block_device_mappings */
        int is_set_bsu_optimized;
	int bsu_optimized; /* | bool | bool | bsu_optimized */
	char *client_token; /* | string | string | client_token */
	char *creation_date; /* | string | string | creation_date */
        int is_set_deletion_protection;
	int deletion_protection; /* | bool | bool | deletion_protection */
	char *hypervisor; /* | string | string | hypervisor */
	char *image_id; /* | string | string | image_id */
        int is_set_is_source_dest_checked;
	int is_source_dest_checked; /* | bool | bool | is_source_dest_checked */
	char *keypair_name; /* | string | string | keypair_name */
        int is_set_launch_number;
	int launch_number; /* | int | int | launch_number */
        int is_set_nested_virtualization;
	int nested_virtualization; /* | bool | bool | nested_virtualization */
	char *net_id; /* | string | string | net_id */
/* type 2 array */
	char *nics; /* | array | array | nics */
	char *os_family; /* | string | string | os_family */
	char *performance; /* | string | string | performance */
	char *placement; /* | null | null | placement */
	char *private_dns_name; /* | string | string | private_dns_name */
	char *private_ip; /* | string | string | private_ip */
        char *product_codes_str;
	char **product_codes; /* | array string | array string | product_codes */
	char *public_dns_name; /* | string | string | public_dns_name */
	char *public_ip; /* | string | string | public_ip */
	char *reservation_id; /* | string | string | reservation_id */
	char *root_device_name; /* | string | string | root_device_name */
	char *root_device_type; /* | string | string | root_device_type */
/* type 2 array */
	char *security_groups; /* | array | array | security_groups */
	char *state; /* | string | string | state */
	char *state_reason; /* | string | string | state_reason */
	char *subnet_id; /* | string | string | subnet_id */
/* type 2 array */
	char *tags; /* | array | array | tags */
	char *user_data; /* | string | string | user_data */
	char *vm_id; /* | string | string | vm_id */
	char *vm_initiated_shutdown_behavior; /* | string | string | vm_initiated_shutdown_behavior */
	char *vm_type; /* | string | string | vm_type */
};

struct vm_state {
	char *current_state; /* | string | string | current_state */
	char *previous_state; /* | string | string | previous_state */
	char *vm_id; /* | string | string | vm_id */
};

struct vm_states {
/* type 2 array */
	char *maintenance_events; /* | array | array | maintenance_events */
	char *subregion_name; /* | string | string | subregion_name */
	char *vm_id; /* | string | string | vm_id */
	char *vm_state; /* | string | string | vm_state */
};

struct vm_type {
        int is_set_bsu_optimized;
	int bsu_optimized; /* | bool | bool | bsu_optimized */
        int is_set_max_private_ips;
	int max_private_ips; /* | int | int | max_private_ips */
	char *memory_size; /* | number | number | memory_size */
        int is_set_vcore_count;
	int vcore_count; /* | int | int | vcore_count */
	char *vm_type_name; /* | string | string | vm_type_name */
        int is_set_volume_count;
	int volume_count; /* | int | int | volume_count */
        int is_set_volume_size;
	int volume_size; /* | int | int | volume_size */
};

struct volume {
	char *creation_date; /* | string | string | creation_date */
        int is_set_iops;
	int iops; /* | int | int | iops */
/* type 2 array */
	char *linked_volumes; /* | array | array | linked_volumes */
        int is_set_size;
	int size; /* | int | int | size */
	char *snapshot_id; /* | string | string | snapshot_id */
	char *state; /* | string | string | state */
	char *subregion_name; /* | string | string | subregion_name */
/* type 2 array */
	char *tags; /* | array | array | tags */
	char *volume_id; /* | string | string | volume_id */
	char *volume_type; /* | string | string | volume_type */
};

struct vpn_connection {
	char *client_gateway_configuration; /* | string | string | client_gateway_configuration */
	char *client_gateway_id; /* | string | string | client_gateway_id */
	char *connection_type; /* | string | string | connection_type */
/* type 2 array */
	char *routes; /* | array | array | routes */
	char *state; /* | string | string | state */
        int is_set_static_routes_only;
	int static_routes_only; /* | bool | bool | static_routes_only */
/* type 2 array */
	char *tags; /* | array | array | tags */
/* type 2 array */
	char *vgw_telemetries; /* | array | array | vgw_telemetries */
	char *virtual_gateway_id; /* | string | string | virtual_gateway_id */
	char *vpn_connection_id; /* | string | string | vpn_connection_id */
	char *vpn_options; /* | null | null | vpn_options */
};

struct vpn_options {
	char *phase1_options; /* | null | null | phase1_options */
	char *phase2_options; /* | null | null | phase2_options */
	char *tunnel_inside_ip_range; /* | string | string | tunnel_inside_ip_range */
};

struct with {
        int is_set_account_id;
	int account_id; /* | bool | bool | account_id */
        int is_set_call_duration;
	int call_duration; /* | bool | bool | call_duration */
        int is_set_query_access_key;
	int query_access_key; /* | bool | bool | query_access_key */
        int is_set_query_api_name;
	int query_api_name; /* | bool | bool | query_api_name */
        int is_set_query_api_version;
	int query_api_version; /* | bool | bool | query_api_version */
        int is_set_query_call_name;
	int query_call_name; /* | bool | bool | query_call_name */
        int is_set_query_date;
	int query_date; /* | bool | bool | query_date */
        int is_set_query_header_raw;
	int query_header_raw; /* | bool | bool | query_header_raw */
        int is_set_query_header_size;
	int query_header_size; /* | bool | bool | query_header_size */
        int is_set_query_ip_address;
	int query_ip_address; /* | bool | bool | query_ip_address */
        int is_set_query_payload_raw;
	int query_payload_raw; /* | bool | bool | query_payload_raw */
        int is_set_query_payload_size;
	int query_payload_size; /* | bool | bool | query_payload_size */
        int is_set_query_user_agent;
	int query_user_agent; /* | bool | bool | query_user_agent */
        int is_set_request_id;
	int request_id; /* | bool | bool | request_id */
        int is_set_response_size;
	int response_size; /* | bool | bool | response_size */
        int is_set_response_status_code;
	int response_status_code; /* | bool | bool | response_status_code */
};

struct osc_update_vpn_connection_arg  {
	char *client_gateway_id; /* | string | string | client_gateway_id */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *virtual_gateway_id; /* | string | string | virtual_gateway_id */
	char *vpn_connection_id; /* | string | string | vpn_connection_id */
        char *vpn_options_str;
        int is_set_vpn_options;
	struct vpn_options vpn_options; /* | ref VpnOptions | VpnOptions | vpn_options */
};

struct osc_update_volume_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        int is_set_iops;
	int iops; /* | int | int | iops */
        int is_set_size;
	int size; /* | int | int | size */
	char *volume_id; /* | string | string | volume_id */
	char *volume_type; /* | string | string | volume_type */
};

struct osc_update_vm_arg  {
/* type 2 array */
	char *block_device_mappings; /* | array | array | block_device_mappings */
        int is_set_bsu_optimized;
	int bsu_optimized; /* | bool | bool | bsu_optimized */
        int is_set_deletion_protection;
	int deletion_protection; /* | bool | bool | deletion_protection */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        int is_set_is_source_dest_checked;
	int is_source_dest_checked; /* | bool | bool | is_source_dest_checked */
	char *keypair_name; /* | string | string | keypair_name */
        int is_set_nested_virtualization;
	int nested_virtualization; /* | bool | bool | nested_virtualization */
	char *performance; /* | string | string | performance */
        char *security_group_ids_str;
	char **security_group_ids; /* | array string | array string | security_group_ids */
	char *user_data; /* | string | string | user_data */
	char *vm_id; /* | string | string | vm_id */
	char *vm_initiated_shutdown_behavior; /* | string | string | vm_initiated_shutdown_behavior */
	char *vm_type; /* | string | string | vm_type */
};

struct osc_update_subnet_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        int is_set_map_public_ip_on_launch;
	int map_public_ip_on_launch; /* | bool | bool | map_public_ip_on_launch */
	char *subnet_id; /* | string | string | subnet_id */
};

struct osc_update_snapshot_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *permissions_to_create_volume_str;
        int is_set_permissions_to_create_volume;
	struct permissions_on_resource_creation permissions_to_create_volume; /* | ref PermissionsOnResourceCreation | PermissionsOnResourceCreation | permissions_to_create_volume */
	char *snapshot_id; /* | string | string | snapshot_id */
};

struct osc_update_server_certificate_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *name; /* | string | string | name */
	char *new_name; /* | string | string | new_name */
	char *new_path; /* | string | string | new_path */
};

struct osc_update_route_propagation_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        int is_set_enable;
	int enable; /* | bool | bool | enable */
	char *route_table_id; /* | string | string | route_table_id */
	char *virtual_gateway_id; /* | string | string | virtual_gateway_id */
};

struct osc_update_route_arg  {
	char *destination_ip_range; /* | string | string | destination_ip_range */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *gateway_id; /* | string | string | gateway_id */
	char *nat_service_id; /* | string | string | nat_service_id */
	char *net_peering_id; /* | string | string | net_peering_id */
	char *nic_id; /* | string | string | nic_id */
	char *route_table_id; /* | string | string | route_table_id */
	char *vm_id; /* | string | string | vm_id */
};

struct osc_update_nic_arg  {
	char *description; /* | string | string | description */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *link_nic_str;
        int is_set_link_nic;
	struct link_nic_to_update link_nic; /* | ref LinkNicToUpdate | LinkNicToUpdate | link_nic */
	char *nic_id; /* | string | string | nic_id */
        char *security_group_ids_str;
	char **security_group_ids; /* | array string | array string | security_group_ids */
};

struct osc_update_net_access_point_arg  {
        char *add_route_table_ids_str;
	char **add_route_table_ids; /* | array string | array string | add_route_table_ids */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *net_access_point_id; /* | string | string | net_access_point_id */
        char *remove_route_table_ids_str;
	char **remove_route_table_ids; /* | array string | array string | remove_route_table_ids */
};

struct osc_update_net_arg  {
	char *dhcp_options_set_id; /* | string | string | dhcp_options_set_id */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *net_id; /* | string | string | net_id */
};

struct osc_update_load_balancer_arg  {
        char *access_log_str;
        int is_set_access_log;
	struct access_log access_log; /* | ref AccessLog | AccessLog | access_log */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *health_check_str;
        int is_set_health_check;
	struct health_check health_check; /* | ref HealthCheck | HealthCheck | health_check */
	char *load_balancer_name; /* | string | string | load_balancer_name */
        int is_set_load_balancer_port;
	int load_balancer_port; /* | int | int | load_balancer_port */
        char *policy_names_str;
	char **policy_names; /* | array string | array string | policy_names */
	char *public_ip; /* | string | string | public_ip */
        int is_set_secured_cookies;
	int secured_cookies; /* | bool | bool | secured_cookies */
        char *security_groups_str;
	char **security_groups; /* | array string | array string | security_groups */
	char *server_certificate_id; /* | string | string | server_certificate_id */
};

struct osc_update_listener_rule_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *host_pattern; /* | string | string | host_pattern */
	char *listener_rule_name; /* | string | string | listener_rule_name */
	char *path_pattern; /* | string | string | path_pattern */
};

struct osc_update_image_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *image_id; /* | string | string | image_id */
        char *permissions_to_launch_str;
        int is_set_permissions_to_launch;
	struct permissions_on_resource_creation permissions_to_launch; /* | ref PermissionsOnResourceCreation | PermissionsOnResourceCreation | permissions_to_launch */
};

struct osc_update_flexible_gpu_arg  {
        int is_set_delete_on_vm_deletion;
	int delete_on_vm_deletion; /* | bool | bool | delete_on_vm_deletion */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *flexible_gpu_id; /* | string | string | flexible_gpu_id */
};

struct osc_update_direct_link_interface_arg  {
	char *direct_link_interface_id; /* | string | string | direct_link_interface_id */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        int is_set_mtu;
	int mtu; /* | int | int | mtu */
};

struct osc_update_ca_arg  {
	char *ca_id; /* | string | string | ca_id */
	char *description; /* | string | string | description */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
};

struct osc_update_api_access_rule_arg  {
	char *api_access_rule_id; /* | string | string | api_access_rule_id */
        char *ca_ids_str;
	char **ca_ids; /* | array string | array string | ca_ids */
        char *cns_str;
	char **cns; /* | array string | array string | cns */
	char *description; /* | string | string | description */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *ip_ranges_str;
	char **ip_ranges; /* | array string | array string | ip_ranges */
};

struct osc_update_api_access_policy_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        int is_set_max_access_key_expiration_seconds;
	int max_access_key_expiration_seconds; /* | int | int | max_access_key_expiration_seconds */
        int is_set_require_trusted_env;
	int require_trusted_env; /* | bool | bool | require_trusted_env */
};

struct osc_update_account_arg  {
        char *additional_emails_str;
	char **additional_emails; /* | array string | array string | additional_emails */
	char *city; /* | string | string | city */
	char *company_name; /* | string | string | company_name */
	char *country; /* | string | string | country */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *email; /* | string | string | email */
	char *first_name; /* | string | string | first_name */
	char *job_title; /* | string | string | job_title */
	char *last_name; /* | string | string | last_name */
	char *mobile_number; /* | string | string | mobile_number */
	char *phone_number; /* | string | string | phone_number */
	char *state_province; /* | string | string | state_province */
	char *vat_number; /* | string | string | vat_number */
	char *zip_code; /* | string | string | zip_code */
};

struct osc_update_access_key_arg  {
	char *access_key_id; /* | string | string | access_key_id */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *expiration_date; /* | string | string | expiration_date */
	char *state; /* | string | string | state */
};

struct osc_unlink_volume_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        int is_set_force_unlink;
	int force_unlink; /* | bool | bool | force_unlink */
	char *volume_id; /* | string | string | volume_id */
};

struct osc_unlink_virtual_gateway_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *net_id; /* | string | string | net_id */
	char *virtual_gateway_id; /* | string | string | virtual_gateway_id */
};

struct osc_unlink_route_table_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *link_route_table_id; /* | string | string | link_route_table_id */
};

struct osc_unlink_public_ip_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *link_public_ip_id; /* | string | string | link_public_ip_id */
	char *public_ip; /* | string | string | public_ip */
};

struct osc_unlink_private_ips_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *nic_id; /* | string | string | nic_id */
        char *private_ips_str;
	char **private_ips; /* | array string | array string | private_ips */
};

struct osc_unlink_nic_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *link_nic_id; /* | string | string | link_nic_id */
};

struct osc_unlink_load_balancer_backend_machines_arg  {
        char *backend_ips_str;
	char **backend_ips; /* | array string | array string | backend_ips */
        char *backend_vm_ids_str;
	char **backend_vm_ids; /* | array string | array string | backend_vm_ids */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *load_balancer_name; /* | string | string | load_balancer_name */
};

struct osc_unlink_internet_service_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *internet_service_id; /* | string | string | internet_service_id */
	char *net_id; /* | string | string | net_id */
};

struct osc_unlink_flexible_gpu_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *flexible_gpu_id; /* | string | string | flexible_gpu_id */
};

struct osc_stop_vms_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        int is_set_force_stop;
	int force_stop; /* | bool | bool | force_stop */
        char *vm_ids_str;
	char **vm_ids; /* | array string | array string | vm_ids */
};

struct osc_start_vms_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *vm_ids_str;
	char **vm_ids; /* | array string | array string | vm_ids */
};

struct osc_send_reset_password_email_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *email; /* | string | string | email */
};

struct osc_reset_account_password_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *password; /* | string | string | password */
	char *token; /* | string | string | token */
};

struct osc_reject_net_peering_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *net_peering_id; /* | string | string | net_peering_id */
};

struct osc_register_vms_in_load_balancer_arg  {
        char *backend_vm_ids_str;
	char **backend_vm_ids; /* | array string | array string | backend_vm_ids */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *load_balancer_name; /* | string | string | load_balancer_name */
};

struct osc_reboot_vms_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *vm_ids_str;
	char **vm_ids; /* | array string | array string | vm_ids */
};

struct osc_read_vpn_connections_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_vpn_connection filters; /* | ref FiltersVpnConnection | FiltersVpnConnection | filters */
};

struct osc_read_volumes_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_volume filters; /* | ref FiltersVolume | FiltersVolume | filters */
};

struct osc_read_vms_state_arg  {
        int is_set_all_vms;
	int all_vms; /* | bool | bool | all_vms */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_vms_state filters; /* | ref FiltersVmsState | FiltersVmsState | filters */
};

struct osc_read_vms_health_arg  {
        char *backend_vm_ids_str;
	char **backend_vm_ids; /* | array string | array string | backend_vm_ids */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *load_balancer_name; /* | string | string | load_balancer_name */
};

struct osc_read_vms_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_vm filters; /* | ref FiltersVm | FiltersVm | filters */
};

struct osc_read_vm_types_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_vm_type filters; /* | ref FiltersVmType | FiltersVmType | filters */
};

struct osc_read_virtual_gateways_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_virtual_gateway filters; /* | ref FiltersVirtualGateway | FiltersVirtualGateway | filters */
};

struct osc_read_tags_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_tag filters; /* | ref FiltersTag | FiltersTag | filters */
};

struct osc_read_subregions_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_subregion filters; /* | ref FiltersSubregion | FiltersSubregion | filters */
};

struct osc_read_subnets_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_subnet filters; /* | ref FiltersSubnet | FiltersSubnet | filters */
};

struct osc_read_snapshots_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_snapshot filters; /* | ref FiltersSnapshot | FiltersSnapshot | filters */
};

struct osc_read_snapshot_export_tasks_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_export_task filters; /* | ref FiltersExportTask | FiltersExportTask | filters */
};

struct osc_read_server_certificates_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_server_certificate filters; /* | ref FiltersServerCertificate | FiltersServerCertificate | filters */
};

struct osc_read_security_groups_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_security_group filters; /* | ref FiltersSecurityGroup | FiltersSecurityGroup | filters */
};

struct osc_read_secret_access_key_arg  {
	char *access_key_id; /* | string | string | access_key_id */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
};

struct osc_read_route_tables_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_route_table filters; /* | ref FiltersRouteTable | FiltersRouteTable | filters */
};

struct osc_read_regions_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
};

struct osc_read_quotas_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_quota filters; /* | ref FiltersQuota | FiltersQuota | filters */
};

struct osc_read_public_ips_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_public_ip filters; /* | ref FiltersPublicIp | FiltersPublicIp | filters */
};

struct osc_read_public_ip_ranges_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
};

struct osc_read_public_catalog_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
};

struct osc_read_product_types_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_product_type filters; /* | ref FiltersProductType | FiltersProductType | filters */
};

struct osc_read_nics_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_nic filters; /* | ref FiltersNic | FiltersNic | filters */
};

struct osc_read_nets_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_net filters; /* | ref FiltersNet | FiltersNet | filters */
};

struct osc_read_net_peerings_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_net_peering filters; /* | ref FiltersNetPeering | FiltersNetPeering | filters */
};

struct osc_read_net_access_points_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_net_access_point filters; /* | ref FiltersNetAccessPoint | FiltersNetAccessPoint | filters */
};

struct osc_read_net_access_point_services_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_service filters; /* | ref FiltersService | FiltersService | filters */
};

struct osc_read_nat_services_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_nat_service filters; /* | ref FiltersNatService | FiltersNatService | filters */
};

struct osc_read_locations_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
};

struct osc_read_load_balancers_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_load_balancer filters; /* | ref FiltersLoadBalancer | FiltersLoadBalancer | filters */
};

struct osc_read_load_balancer_tags_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *load_balancer_names_str;
	char **load_balancer_names; /* | array string | array string | load_balancer_names */
};

struct osc_read_listener_rules_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_listener_rule filters; /* | ref FiltersListenerRule | FiltersListenerRule | filters */
};

struct osc_read_keypairs_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_keypair filters; /* | ref FiltersKeypair | FiltersKeypair | filters */
};

struct osc_read_internet_services_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_internet_service filters; /* | ref FiltersInternetService | FiltersInternetService | filters */
};

struct osc_read_images_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_image filters; /* | ref FiltersImage | FiltersImage | filters */
};

struct osc_read_image_export_tasks_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_export_task filters; /* | ref FiltersExportTask | FiltersExportTask | filters */
};

struct osc_read_flexible_gpus_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_flexible_gpu filters; /* | ref FiltersFlexibleGpu | FiltersFlexibleGpu | filters */
};

struct osc_read_flexible_gpu_catalog_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
};

struct osc_read_direct_links_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_direct_link filters; /* | ref FiltersDirectLink | FiltersDirectLink | filters */
};

struct osc_read_direct_link_interfaces_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_direct_link_interface filters; /* | ref FiltersDirectLinkInterface | FiltersDirectLinkInterface | filters */
};

struct osc_read_dhcp_options_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_dhcp_options filters; /* | ref FiltersDhcpOptions | FiltersDhcpOptions | filters */
};

struct osc_read_consumption_account_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *from_date; /* | string | string | from_date */
        int is_set_overall;
	int overall; /* | bool | bool | overall */
	char *to_date; /* | string | string | to_date */
};

struct osc_read_console_output_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *vm_id; /* | string | string | vm_id */
};

struct osc_read_client_gateways_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_client_gateway filters; /* | ref FiltersClientGateway | FiltersClientGateway | filters */
};

struct osc_read_catalog_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
};

struct osc_read_cas_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_ca filters; /* | ref FiltersCa | FiltersCa | filters */
};

struct osc_read_api_logs_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_api_log filters; /* | ref FiltersApiLog | FiltersApiLog | filters */
	char *next_page_token; /* | string | string | next_page_token */
        int is_set_results_per_page;
	int results_per_page; /* | int | int | results_per_page */
        char *with_str;
        int is_set_with;
	struct with with; /* | ref With | With | with */
};

struct osc_read_api_access_rules_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_api_access_rule filters; /* | ref FiltersApiAccessRule | FiltersApiAccessRule | filters */
};

struct osc_read_api_access_policy_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
};

struct osc_read_admin_password_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *vm_id; /* | string | string | vm_id */
};

struct osc_read_accounts_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
};

struct osc_read_access_keys_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *filters_str;
        int is_set_filters;
	struct filters_access_keys filters; /* | ref FiltersAccessKeys | FiltersAccessKeys | filters */
};

struct osc_link_volume_arg  {
	char *device_name; /* | string | string | device_name */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *vm_id; /* | string | string | vm_id */
	char *volume_id; /* | string | string | volume_id */
};

struct osc_link_virtual_gateway_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *net_id; /* | string | string | net_id */
	char *virtual_gateway_id; /* | string | string | virtual_gateway_id */
};

struct osc_link_route_table_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *route_table_id; /* | string | string | route_table_id */
	char *subnet_id; /* | string | string | subnet_id */
};

struct osc_link_public_ip_arg  {
        int is_set_allow_relink;
	int allow_relink; /* | bool | bool | allow_relink */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *nic_id; /* | string | string | nic_id */
	char *private_ip; /* | string | string | private_ip */
	char *public_ip; /* | string | string | public_ip */
	char *public_ip_id; /* | string | string | public_ip_id */
	char *vm_id; /* | string | string | vm_id */
};

struct osc_link_private_ips_arg  {
        int is_set_allow_relink;
	int allow_relink; /* | bool | bool | allow_relink */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *nic_id; /* | string | string | nic_id */
        char *private_ips_str;
	char **private_ips; /* | array string | array string | private_ips */
        int is_set_secondary_private_ip_count;
	int secondary_private_ip_count; /* | int | int | secondary_private_ip_count */
};

struct osc_link_nic_arg  {
        int is_set_device_number;
	int device_number; /* | int | int | device_number */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *nic_id; /* | string | string | nic_id */
	char *vm_id; /* | string | string | vm_id */
};

struct osc_link_load_balancer_backend_machines_arg  {
        char *backend_ips_str;
	char **backend_ips; /* | array string | array string | backend_ips */
        char *backend_vm_ids_str;
	char **backend_vm_ids; /* | array string | array string | backend_vm_ids */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *load_balancer_name; /* | string | string | load_balancer_name */
};

struct osc_link_internet_service_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *internet_service_id; /* | string | string | internet_service_id */
	char *net_id; /* | string | string | net_id */
};

struct osc_link_flexible_gpu_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *flexible_gpu_id; /* | string | string | flexible_gpu_id */
	char *vm_id; /* | string | string | vm_id */
};

struct osc_deregister_vms_in_load_balancer_arg  {
        char *backend_vm_ids_str;
	char **backend_vm_ids; /* | array string | array string | backend_vm_ids */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *load_balancer_name; /* | string | string | load_balancer_name */
};

struct osc_delete_vpn_connection_route_arg  {
	char *destination_ip_range; /* | string | string | destination_ip_range */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *vpn_connection_id; /* | string | string | vpn_connection_id */
};

struct osc_delete_vpn_connection_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *vpn_connection_id; /* | string | string | vpn_connection_id */
};

struct osc_delete_volume_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *volume_id; /* | string | string | volume_id */
};

struct osc_delete_vms_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *vm_ids_str;
	char **vm_ids; /* | array string | array string | vm_ids */
};

struct osc_delete_virtual_gateway_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *virtual_gateway_id; /* | string | string | virtual_gateway_id */
};

struct osc_delete_tags_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *resource_ids_str;
	char **resource_ids; /* | array string | array string | resource_ids */
/* type 2 array */
	char *tags; /* | array | array | tags */
};

struct osc_delete_subnet_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *subnet_id; /* | string | string | subnet_id */
};

struct osc_delete_snapshot_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *snapshot_id; /* | string | string | snapshot_id */
};

struct osc_delete_server_certificate_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *name; /* | string | string | name */
};

struct osc_delete_security_group_rule_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *flow; /* | string | string | flow */
        int is_set_from_port_range;
	int from_port_range; /* | int | int | from_port_range */
	char *ip_protocol; /* | string | string | ip_protocol */
	char *ip_range; /* | string | string | ip_range */
/* type 2 array */
	char *rules; /* | array | array | rules */
	char *security_group_account_id_to_unlink; /* | string | string | security_group_account_id_to_unlink */
	char *security_group_id; /* | string | string | security_group_id */
	char *security_group_name_to_unlink; /* | string | string | security_group_name_to_unlink */
        int is_set_to_port_range;
	int to_port_range; /* | int | int | to_port_range */
};

struct osc_delete_security_group_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *security_group_id; /* | string | string | security_group_id */
	char *security_group_name; /* | string | string | security_group_name */
};

struct osc_delete_route_table_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *route_table_id; /* | string | string | route_table_id */
};

struct osc_delete_route_arg  {
	char *destination_ip_range; /* | string | string | destination_ip_range */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *route_table_id; /* | string | string | route_table_id */
};

struct osc_delete_public_ip_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *public_ip; /* | string | string | public_ip */
	char *public_ip_id; /* | string | string | public_ip_id */
};

struct osc_delete_nic_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *nic_id; /* | string | string | nic_id */
};

struct osc_delete_net_peering_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *net_peering_id; /* | string | string | net_peering_id */
};

struct osc_delete_net_access_point_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *net_access_point_id; /* | string | string | net_access_point_id */
};

struct osc_delete_net_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *net_id; /* | string | string | net_id */
};

struct osc_delete_nat_service_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *nat_service_id; /* | string | string | nat_service_id */
};

struct osc_delete_load_balancer_tags_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *load_balancer_names_str;
	char **load_balancer_names; /* | array string | array string | load_balancer_names */
/* type 2 array */
	char *tags; /* | array | array | tags */
};

struct osc_delete_load_balancer_policy_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *load_balancer_name; /* | string | string | load_balancer_name */
	char *policy_name; /* | string | string | policy_name */
};

struct osc_delete_load_balancer_listeners_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *load_balancer_name; /* | string | string | load_balancer_name */
        char *load_balancer_ports_str;
	int *load_balancer_ports; /* | array integer | array integer | load_balancer_ports */
};

struct osc_delete_load_balancer_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *load_balancer_name; /* | string | string | load_balancer_name */
};

struct osc_delete_listener_rule_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *listener_rule_name; /* | string | string | listener_rule_name */
};

struct osc_delete_keypair_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *keypair_name; /* | string | string | keypair_name */
};

struct osc_delete_internet_service_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *internet_service_id; /* | string | string | internet_service_id */
};

struct osc_delete_image_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *image_id; /* | string | string | image_id */
};

struct osc_delete_flexible_gpu_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *flexible_gpu_id; /* | string | string | flexible_gpu_id */
};

struct osc_delete_export_task_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *export_task_id; /* | string | string | export_task_id */
};

struct osc_delete_direct_link_interface_arg  {
	char *direct_link_interface_id; /* | string | string | direct_link_interface_id */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
};

struct osc_delete_direct_link_arg  {
	char *direct_link_id; /* | string | string | direct_link_id */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
};

struct osc_delete_dhcp_options_arg  {
	char *dhcp_options_set_id; /* | string | string | dhcp_options_set_id */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
};

struct osc_delete_client_gateway_arg  {
	char *client_gateway_id; /* | string | string | client_gateway_id */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
};

struct osc_delete_ca_arg  {
	char *ca_id; /* | string | string | ca_id */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
};

struct osc_delete_api_access_rule_arg  {
	char *api_access_rule_id; /* | string | string | api_access_rule_id */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
};

struct osc_delete_access_key_arg  {
	char *access_key_id; /* | string | string | access_key_id */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
};

struct osc_create_vpn_connection_route_arg  {
	char *destination_ip_range; /* | string | string | destination_ip_range */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *vpn_connection_id; /* | string | string | vpn_connection_id */
};

struct osc_create_vpn_connection_arg  {
	char *client_gateway_id; /* | string | string | client_gateway_id */
	char *connection_type; /* | string | string | connection_type */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        int is_set_static_routes_only;
	int static_routes_only; /* | bool | bool | static_routes_only */
	char *virtual_gateway_id; /* | string | string | virtual_gateway_id */
};

struct osc_create_volume_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        int is_set_iops;
	int iops; /* | int | int | iops */
        int is_set_size;
	int size; /* | int | int | size */
	char *snapshot_id; /* | string | string | snapshot_id */
	char *subregion_name; /* | string | string | subregion_name */
	char *volume_type; /* | string | string | volume_type */
};

struct osc_create_vms_arg  {
/* type 2 array */
	char *block_device_mappings; /* | array | array | block_device_mappings */
        int is_set_boot_on_creation;
	int boot_on_creation; /* | bool | bool | boot_on_creation */
        int is_set_bsu_optimized;
	int bsu_optimized; /* | bool | bool | bsu_optimized */
	char *client_token; /* | string | string | client_token */
        int is_set_deletion_protection;
	int deletion_protection; /* | bool | bool | deletion_protection */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *image_id; /* | string | string | image_id */
	char *keypair_name; /* | string | string | keypair_name */
        int is_set_max_vms_count;
	int max_vms_count; /* | int | int | max_vms_count */
        int is_set_min_vms_count;
	int min_vms_count; /* | int | int | min_vms_count */
        int is_set_nested_virtualization;
	int nested_virtualization; /* | bool | bool | nested_virtualization */
/* type 2 array */
	char *nics; /* | array | array | nics */
	char *performance; /* | string | string | performance */
        char *placement_str;
        int is_set_placement;
	struct placement placement; /* | ref Placement | Placement | placement */
        char *private_ips_str;
	char **private_ips; /* | array string | array string | private_ips */
        char *security_group_ids_str;
	char **security_group_ids; /* | array string | array string | security_group_ids */
        char *security_groups_str;
	char **security_groups; /* | array string | array string | security_groups */
	char *subnet_id; /* | string | string | subnet_id */
	char *user_data; /* | string | string | user_data */
	char *vm_initiated_shutdown_behavior; /* | string | string | vm_initiated_shutdown_behavior */
	char *vm_type; /* | string | string | vm_type */
};

struct osc_create_virtual_gateway_arg  {
	char *connection_type; /* | string | string | connection_type */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
};

struct osc_create_tags_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *resource_ids_str;
	char **resource_ids; /* | array string | array string | resource_ids */
/* type 2 array */
	char *tags; /* | array | array | tags */
};

struct osc_create_subnet_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *ip_range; /* | string | string | ip_range */
	char *net_id; /* | string | string | net_id */
	char *subregion_name; /* | string | string | subregion_name */
};

struct osc_create_snapshot_export_task_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *osu_export_str;
        int is_set_osu_export;
	struct osu_export_to_create osu_export; /* | ref OsuExportToCreate | OsuExportToCreate | osu_export */
	char *snapshot_id; /* | string | string | snapshot_id */
};

struct osc_create_snapshot_arg  {
	char *description; /* | string | string | description */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *file_location; /* | string | string | file_location */
        int is_set_snapshot_size;
	int snapshot_size; /* | int | int | snapshot_size */
	char *source_region_name; /* | string | string | source_region_name */
	char *source_snapshot_id; /* | string | string | source_snapshot_id */
	char *volume_id; /* | string | string | volume_id */
};

struct osc_create_server_certificate_arg  {
	char *body; /* | string | string | body */
	char *chain; /* | string | string | chain */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *name; /* | string | string | name */
	char *path; /* | string | string | path */
	char *private_key; /* | string | string | private_key */
};

struct osc_create_security_group_rule_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *flow; /* | string | string | flow */
        int is_set_from_port_range;
	int from_port_range; /* | int | int | from_port_range */
	char *ip_protocol; /* | string | string | ip_protocol */
	char *ip_range; /* | string | string | ip_range */
/* type 2 array */
	char *rules; /* | array | array | rules */
	char *security_group_account_id_to_link; /* | string | string | security_group_account_id_to_link */
	char *security_group_id; /* | string | string | security_group_id */
	char *security_group_name_to_link; /* | string | string | security_group_name_to_link */
        int is_set_to_port_range;
	int to_port_range; /* | int | int | to_port_range */
};

struct osc_create_security_group_arg  {
	char *description; /* | string | string | description */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *net_id; /* | string | string | net_id */
	char *security_group_name; /* | string | string | security_group_name */
};

struct osc_create_route_table_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *net_id; /* | string | string | net_id */
};

struct osc_create_route_arg  {
	char *destination_ip_range; /* | string | string | destination_ip_range */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *gateway_id; /* | string | string | gateway_id */
	char *nat_service_id; /* | string | string | nat_service_id */
	char *net_peering_id; /* | string | string | net_peering_id */
	char *nic_id; /* | string | string | nic_id */
	char *route_table_id; /* | string | string | route_table_id */
	char *vm_id; /* | string | string | vm_id */
};

struct osc_create_public_ip_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
};

struct osc_create_nic_arg  {
	char *description; /* | string | string | description */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
/* type 2 array */
	char *private_ips; /* | array | array | private_ips */
        char *security_group_ids_str;
	char **security_group_ids; /* | array string | array string | security_group_ids */
	char *subnet_id; /* | string | string | subnet_id */
};

struct osc_create_net_peering_arg  {
	char *accepter_net_id; /* | string | string | accepter_net_id */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *source_net_id; /* | string | string | source_net_id */
};

struct osc_create_net_access_point_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *net_id; /* | string | string | net_id */
        char *route_table_ids_str;
	char **route_table_ids; /* | array string | array string | route_table_ids */
	char *service_name; /* | string | string | service_name */
};

struct osc_create_net_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *ip_range; /* | string | string | ip_range */
	char *tenancy; /* | string | string | tenancy */
};

struct osc_create_nat_service_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *public_ip_id; /* | string | string | public_ip_id */
	char *subnet_id; /* | string | string | subnet_id */
};

struct osc_create_load_balancer_tags_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *load_balancer_names_str;
	char **load_balancer_names; /* | array string | array string | load_balancer_names */
/* type 2 array */
	char *tags; /* | array | array | tags */
};

struct osc_create_load_balancer_policy_arg  {
        int is_set_cookie_expiration_period;
	int cookie_expiration_period; /* | int | int | cookie_expiration_period */
	char *cookie_name; /* | string | string | cookie_name */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *load_balancer_name; /* | string | string | load_balancer_name */
	char *policy_name; /* | string | string | policy_name */
	char *policy_type; /* | string | string | policy_type */
};

struct osc_create_load_balancer_listeners_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
/* type 2 array */
	char *listeners; /* | array | array | listeners */
	char *load_balancer_name; /* | string | string | load_balancer_name */
};

struct osc_create_load_balancer_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
/* type 2 array */
	char *listeners; /* | array | array | listeners */
	char *load_balancer_name; /* | string | string | load_balancer_name */
	char *load_balancer_type; /* | string | string | load_balancer_type */
	char *public_ip; /* | string | string | public_ip */
        char *security_groups_str;
	char **security_groups; /* | array string | array string | security_groups */
        char *subnets_str;
	char **subnets; /* | array string | array string | subnets */
        char *subregion_names_str;
	char **subregion_names; /* | array string | array string | subregion_names */
/* type 2 array */
	char *tags; /* | array | array | tags */
};

struct osc_create_listener_rule_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *listener_str;
        int is_set_listener;
	struct load_balancer_light listener; /* | ref LoadBalancerLight | LoadBalancerLight | listener */
        char *listener_rule_str;
        int is_set_listener_rule;
	struct listener_rule_for_creation listener_rule; /* | ref ListenerRuleForCreation | ListenerRuleForCreation | listener_rule */
        char *vm_ids_str;
	char **vm_ids; /* | array string | array string | vm_ids */
};

struct osc_create_keypair_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *keypair_name; /* | string | string | keypair_name */
	char *public_key; /* | string | string | public_key */
};

struct osc_create_internet_service_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
};

struct osc_create_image_export_task_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *image_id; /* | string | string | image_id */
        char *osu_export_str;
        int is_set_osu_export;
	struct osu_export_to_create osu_export; /* | ref OsuExportToCreate | OsuExportToCreate | osu_export */
};

struct osc_create_image_arg  {
	char *architecture; /* | string | string | architecture */
/* type 2 array */
	char *block_device_mappings; /* | array | array | block_device_mappings */
	char *description; /* | string | string | description */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *file_location; /* | string | string | file_location */
	char *image_name; /* | string | string | image_name */
        int is_set_no_reboot;
	int no_reboot; /* | bool | bool | no_reboot */
	char *root_device_name; /* | string | string | root_device_name */
	char *source_image_id; /* | string | string | source_image_id */
	char *source_region_name; /* | string | string | source_region_name */
	char *vm_id; /* | string | string | vm_id */
};

struct osc_create_flexible_gpu_arg  {
        int is_set_delete_on_vm_deletion;
	int delete_on_vm_deletion; /* | bool | bool | delete_on_vm_deletion */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *generation; /* | string | string | generation */
	char *model_name; /* | string | string | model_name */
	char *subregion_name; /* | string | string | subregion_name */
};

struct osc_create_direct_link_interface_arg  {
	char *direct_link_id; /* | string | string | direct_link_id */
        char *direct_link_interface_str;
        int is_set_direct_link_interface;
	struct direct_link_interface direct_link_interface; /* | ref DirectLinkInterface | DirectLinkInterface | direct_link_interface */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
};

struct osc_create_direct_link_arg  {
	char *bandwidth; /* | string | string | bandwidth */
	char *direct_link_name; /* | string | string | direct_link_name */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *location; /* | string | string | location */
};

struct osc_create_dhcp_options_arg  {
	char *domain_name; /* | string | string | domain_name */
        char *domain_name_servers_str;
	char **domain_name_servers; /* | array string | array string | domain_name_servers */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *log_servers_str;
	char **log_servers; /* | array string | array string | log_servers */
        char *ntp_servers_str;
	char **ntp_servers; /* | array string | array string | ntp_servers */
};

struct osc_create_client_gateway_arg  {
        int is_set_bgp_asn;
	int bgp_asn; /* | int | int | bgp_asn */
	char *connection_type; /* | string | string | connection_type */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *public_ip; /* | string | string | public_ip */
};

struct osc_create_ca_arg  {
	char *ca_pem; /* | string | string | ca_pem */
	char *description; /* | string | string | description */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
};

struct osc_create_api_access_rule_arg  {
        char *ca_ids_str;
	char **ca_ids; /* | array string | array string | ca_ids */
        char *cns_str;
	char **cns; /* | array string | array string | cns */
	char *description; /* | string | string | description */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
        char *ip_ranges_str;
	char **ip_ranges; /* | array string | array string | ip_ranges */
};

struct osc_create_account_arg  {
        char *additional_emails_str;
	char **additional_emails; /* | array string | array string | additional_emails */
	char *city; /* | string | string | city */
	char *company_name; /* | string | string | company_name */
	char *country; /* | string | string | country */
	char *customer_id; /* | string | string | customer_id */
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *email; /* | string | string | email */
	char *first_name; /* | string | string | first_name */
	char *job_title; /* | string | string | job_title */
	char *last_name; /* | string | string | last_name */
	char *mobile_number; /* | string | string | mobile_number */
	char *phone_number; /* | string | string | phone_number */
	char *state_province; /* | string | string | state_province */
	char *vat_number; /* | string | string | vat_number */
	char *zip_code; /* | string | string | zip_code */
};

struct osc_create_access_key_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *expiration_date; /* | string | string | expiration_date */
};

struct osc_check_authentication_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *login; /* | string | string | login */
	char *password; /* | string | string | password */
};

struct osc_accept_net_peering_arg  {
        int is_set_dry_run;
	int dry_run; /* | bool | bool | dry_run */
	char *net_peering_id; /* | string | string | net_peering_id */
};


int osc_load_ak_sk_from_conf(const char *profile, char **ak, char **sk);
int osc_load_region_from_conf(const char *profile, char **region);

void osc_init_str(struct osc_str *r);
void osc_deinit_str(struct osc_str *r);
int osc_init_sdk(struct osc_env *e, const char *profile, unsigned int flag);
void osc_deinit_sdk(struct osc_env *e);
const char *osc_find_description(const char *call_name);

int osc_update_vpn_connection(struct osc_env *e, struct osc_str *out, struct osc_update_vpn_connection_arg *args);
int osc_update_volume(struct osc_env *e, struct osc_str *out, struct osc_update_volume_arg *args);
int osc_update_vm(struct osc_env *e, struct osc_str *out, struct osc_update_vm_arg *args);
int osc_update_subnet(struct osc_env *e, struct osc_str *out, struct osc_update_subnet_arg *args);
int osc_update_snapshot(struct osc_env *e, struct osc_str *out, struct osc_update_snapshot_arg *args);
int osc_update_server_certificate(struct osc_env *e, struct osc_str *out, struct osc_update_server_certificate_arg *args);
int osc_update_route_propagation(struct osc_env *e, struct osc_str *out, struct osc_update_route_propagation_arg *args);
int osc_update_route(struct osc_env *e, struct osc_str *out, struct osc_update_route_arg *args);
int osc_update_nic(struct osc_env *e, struct osc_str *out, struct osc_update_nic_arg *args);
int osc_update_net_access_point(struct osc_env *e, struct osc_str *out, struct osc_update_net_access_point_arg *args);
int osc_update_net(struct osc_env *e, struct osc_str *out, struct osc_update_net_arg *args);
int osc_update_load_balancer(struct osc_env *e, struct osc_str *out, struct osc_update_load_balancer_arg *args);
int osc_update_listener_rule(struct osc_env *e, struct osc_str *out, struct osc_update_listener_rule_arg *args);
int osc_update_image(struct osc_env *e, struct osc_str *out, struct osc_update_image_arg *args);
int osc_update_flexible_gpu(struct osc_env *e, struct osc_str *out, struct osc_update_flexible_gpu_arg *args);
int osc_update_direct_link_interface(struct osc_env *e, struct osc_str *out, struct osc_update_direct_link_interface_arg *args);
int osc_update_ca(struct osc_env *e, struct osc_str *out, struct osc_update_ca_arg *args);
int osc_update_api_access_rule(struct osc_env *e, struct osc_str *out, struct osc_update_api_access_rule_arg *args);
int osc_update_api_access_policy(struct osc_env *e, struct osc_str *out, struct osc_update_api_access_policy_arg *args);
int osc_update_account(struct osc_env *e, struct osc_str *out, struct osc_update_account_arg *args);
int osc_update_access_key(struct osc_env *e, struct osc_str *out, struct osc_update_access_key_arg *args);
int osc_unlink_volume(struct osc_env *e, struct osc_str *out, struct osc_unlink_volume_arg *args);
int osc_unlink_virtual_gateway(struct osc_env *e, struct osc_str *out, struct osc_unlink_virtual_gateway_arg *args);
int osc_unlink_route_table(struct osc_env *e, struct osc_str *out, struct osc_unlink_route_table_arg *args);
int osc_unlink_public_ip(struct osc_env *e, struct osc_str *out, struct osc_unlink_public_ip_arg *args);
int osc_unlink_private_ips(struct osc_env *e, struct osc_str *out, struct osc_unlink_private_ips_arg *args);
int osc_unlink_nic(struct osc_env *e, struct osc_str *out, struct osc_unlink_nic_arg *args);
int osc_unlink_load_balancer_backend_machines(struct osc_env *e, struct osc_str *out, struct osc_unlink_load_balancer_backend_machines_arg *args);
int osc_unlink_internet_service(struct osc_env *e, struct osc_str *out, struct osc_unlink_internet_service_arg *args);
int osc_unlink_flexible_gpu(struct osc_env *e, struct osc_str *out, struct osc_unlink_flexible_gpu_arg *args);
int osc_stop_vms(struct osc_env *e, struct osc_str *out, struct osc_stop_vms_arg *args);
int osc_start_vms(struct osc_env *e, struct osc_str *out, struct osc_start_vms_arg *args);
int osc_send_reset_password_email(struct osc_env *e, struct osc_str *out, struct osc_send_reset_password_email_arg *args);
int osc_reset_account_password(struct osc_env *e, struct osc_str *out, struct osc_reset_account_password_arg *args);
int osc_reject_net_peering(struct osc_env *e, struct osc_str *out, struct osc_reject_net_peering_arg *args);
int osc_register_vms_in_load_balancer(struct osc_env *e, struct osc_str *out, struct osc_register_vms_in_load_balancer_arg *args);
int osc_reboot_vms(struct osc_env *e, struct osc_str *out, struct osc_reboot_vms_arg *args);
int osc_read_vpn_connections(struct osc_env *e, struct osc_str *out, struct osc_read_vpn_connections_arg *args);
int osc_read_volumes(struct osc_env *e, struct osc_str *out, struct osc_read_volumes_arg *args);
int osc_read_vms_state(struct osc_env *e, struct osc_str *out, struct osc_read_vms_state_arg *args);
int osc_read_vms_health(struct osc_env *e, struct osc_str *out, struct osc_read_vms_health_arg *args);
int osc_read_vms(struct osc_env *e, struct osc_str *out, struct osc_read_vms_arg *args);
int osc_read_vm_types(struct osc_env *e, struct osc_str *out, struct osc_read_vm_types_arg *args);
int osc_read_virtual_gateways(struct osc_env *e, struct osc_str *out, struct osc_read_virtual_gateways_arg *args);
int osc_read_tags(struct osc_env *e, struct osc_str *out, struct osc_read_tags_arg *args);
int osc_read_subregions(struct osc_env *e, struct osc_str *out, struct osc_read_subregions_arg *args);
int osc_read_subnets(struct osc_env *e, struct osc_str *out, struct osc_read_subnets_arg *args);
int osc_read_snapshots(struct osc_env *e, struct osc_str *out, struct osc_read_snapshots_arg *args);
int osc_read_snapshot_export_tasks(struct osc_env *e, struct osc_str *out, struct osc_read_snapshot_export_tasks_arg *args);
int osc_read_server_certificates(struct osc_env *e, struct osc_str *out, struct osc_read_server_certificates_arg *args);
int osc_read_security_groups(struct osc_env *e, struct osc_str *out, struct osc_read_security_groups_arg *args);
int osc_read_secret_access_key(struct osc_env *e, struct osc_str *out, struct osc_read_secret_access_key_arg *args);
int osc_read_route_tables(struct osc_env *e, struct osc_str *out, struct osc_read_route_tables_arg *args);
int osc_read_regions(struct osc_env *e, struct osc_str *out, struct osc_read_regions_arg *args);
int osc_read_quotas(struct osc_env *e, struct osc_str *out, struct osc_read_quotas_arg *args);
int osc_read_public_ips(struct osc_env *e, struct osc_str *out, struct osc_read_public_ips_arg *args);
int osc_read_public_ip_ranges(struct osc_env *e, struct osc_str *out, struct osc_read_public_ip_ranges_arg *args);
int osc_read_public_catalog(struct osc_env *e, struct osc_str *out, struct osc_read_public_catalog_arg *args);
int osc_read_product_types(struct osc_env *e, struct osc_str *out, struct osc_read_product_types_arg *args);
int osc_read_nics(struct osc_env *e, struct osc_str *out, struct osc_read_nics_arg *args);
int osc_read_nets(struct osc_env *e, struct osc_str *out, struct osc_read_nets_arg *args);
int osc_read_net_peerings(struct osc_env *e, struct osc_str *out, struct osc_read_net_peerings_arg *args);
int osc_read_net_access_points(struct osc_env *e, struct osc_str *out, struct osc_read_net_access_points_arg *args);
int osc_read_net_access_point_services(struct osc_env *e, struct osc_str *out, struct osc_read_net_access_point_services_arg *args);
int osc_read_nat_services(struct osc_env *e, struct osc_str *out, struct osc_read_nat_services_arg *args);
int osc_read_locations(struct osc_env *e, struct osc_str *out, struct osc_read_locations_arg *args);
int osc_read_load_balancers(struct osc_env *e, struct osc_str *out, struct osc_read_load_balancers_arg *args);
int osc_read_load_balancer_tags(struct osc_env *e, struct osc_str *out, struct osc_read_load_balancer_tags_arg *args);
int osc_read_listener_rules(struct osc_env *e, struct osc_str *out, struct osc_read_listener_rules_arg *args);
int osc_read_keypairs(struct osc_env *e, struct osc_str *out, struct osc_read_keypairs_arg *args);
int osc_read_internet_services(struct osc_env *e, struct osc_str *out, struct osc_read_internet_services_arg *args);
int osc_read_images(struct osc_env *e, struct osc_str *out, struct osc_read_images_arg *args);
int osc_read_image_export_tasks(struct osc_env *e, struct osc_str *out, struct osc_read_image_export_tasks_arg *args);
int osc_read_flexible_gpus(struct osc_env *e, struct osc_str *out, struct osc_read_flexible_gpus_arg *args);
int osc_read_flexible_gpu_catalog(struct osc_env *e, struct osc_str *out, struct osc_read_flexible_gpu_catalog_arg *args);
int osc_read_direct_links(struct osc_env *e, struct osc_str *out, struct osc_read_direct_links_arg *args);
int osc_read_direct_link_interfaces(struct osc_env *e, struct osc_str *out, struct osc_read_direct_link_interfaces_arg *args);
int osc_read_dhcp_options(struct osc_env *e, struct osc_str *out, struct osc_read_dhcp_options_arg *args);
int osc_read_consumption_account(struct osc_env *e, struct osc_str *out, struct osc_read_consumption_account_arg *args);
int osc_read_console_output(struct osc_env *e, struct osc_str *out, struct osc_read_console_output_arg *args);
int osc_read_client_gateways(struct osc_env *e, struct osc_str *out, struct osc_read_client_gateways_arg *args);
int osc_read_catalog(struct osc_env *e, struct osc_str *out, struct osc_read_catalog_arg *args);
int osc_read_cas(struct osc_env *e, struct osc_str *out, struct osc_read_cas_arg *args);
int osc_read_api_logs(struct osc_env *e, struct osc_str *out, struct osc_read_api_logs_arg *args);
int osc_read_api_access_rules(struct osc_env *e, struct osc_str *out, struct osc_read_api_access_rules_arg *args);
int osc_read_api_access_policy(struct osc_env *e, struct osc_str *out, struct osc_read_api_access_policy_arg *args);
int osc_read_admin_password(struct osc_env *e, struct osc_str *out, struct osc_read_admin_password_arg *args);
int osc_read_accounts(struct osc_env *e, struct osc_str *out, struct osc_read_accounts_arg *args);
int osc_read_access_keys(struct osc_env *e, struct osc_str *out, struct osc_read_access_keys_arg *args);
int osc_link_volume(struct osc_env *e, struct osc_str *out, struct osc_link_volume_arg *args);
int osc_link_virtual_gateway(struct osc_env *e, struct osc_str *out, struct osc_link_virtual_gateway_arg *args);
int osc_link_route_table(struct osc_env *e, struct osc_str *out, struct osc_link_route_table_arg *args);
int osc_link_public_ip(struct osc_env *e, struct osc_str *out, struct osc_link_public_ip_arg *args);
int osc_link_private_ips(struct osc_env *e, struct osc_str *out, struct osc_link_private_ips_arg *args);
int osc_link_nic(struct osc_env *e, struct osc_str *out, struct osc_link_nic_arg *args);
int osc_link_load_balancer_backend_machines(struct osc_env *e, struct osc_str *out, struct osc_link_load_balancer_backend_machines_arg *args);
int osc_link_internet_service(struct osc_env *e, struct osc_str *out, struct osc_link_internet_service_arg *args);
int osc_link_flexible_gpu(struct osc_env *e, struct osc_str *out, struct osc_link_flexible_gpu_arg *args);
int osc_deregister_vms_in_load_balancer(struct osc_env *e, struct osc_str *out, struct osc_deregister_vms_in_load_balancer_arg *args);
int osc_delete_vpn_connection_route(struct osc_env *e, struct osc_str *out, struct osc_delete_vpn_connection_route_arg *args);
int osc_delete_vpn_connection(struct osc_env *e, struct osc_str *out, struct osc_delete_vpn_connection_arg *args);
int osc_delete_volume(struct osc_env *e, struct osc_str *out, struct osc_delete_volume_arg *args);
int osc_delete_vms(struct osc_env *e, struct osc_str *out, struct osc_delete_vms_arg *args);
int osc_delete_virtual_gateway(struct osc_env *e, struct osc_str *out, struct osc_delete_virtual_gateway_arg *args);
int osc_delete_tags(struct osc_env *e, struct osc_str *out, struct osc_delete_tags_arg *args);
int osc_delete_subnet(struct osc_env *e, struct osc_str *out, struct osc_delete_subnet_arg *args);
int osc_delete_snapshot(struct osc_env *e, struct osc_str *out, struct osc_delete_snapshot_arg *args);
int osc_delete_server_certificate(struct osc_env *e, struct osc_str *out, struct osc_delete_server_certificate_arg *args);
int osc_delete_security_group_rule(struct osc_env *e, struct osc_str *out, struct osc_delete_security_group_rule_arg *args);
int osc_delete_security_group(struct osc_env *e, struct osc_str *out, struct osc_delete_security_group_arg *args);
int osc_delete_route_table(struct osc_env *e, struct osc_str *out, struct osc_delete_route_table_arg *args);
int osc_delete_route(struct osc_env *e, struct osc_str *out, struct osc_delete_route_arg *args);
int osc_delete_public_ip(struct osc_env *e, struct osc_str *out, struct osc_delete_public_ip_arg *args);
int osc_delete_nic(struct osc_env *e, struct osc_str *out, struct osc_delete_nic_arg *args);
int osc_delete_net_peering(struct osc_env *e, struct osc_str *out, struct osc_delete_net_peering_arg *args);
int osc_delete_net_access_point(struct osc_env *e, struct osc_str *out, struct osc_delete_net_access_point_arg *args);
int osc_delete_net(struct osc_env *e, struct osc_str *out, struct osc_delete_net_arg *args);
int osc_delete_nat_service(struct osc_env *e, struct osc_str *out, struct osc_delete_nat_service_arg *args);
int osc_delete_load_balancer_tags(struct osc_env *e, struct osc_str *out, struct osc_delete_load_balancer_tags_arg *args);
int osc_delete_load_balancer_policy(struct osc_env *e, struct osc_str *out, struct osc_delete_load_balancer_policy_arg *args);
int osc_delete_load_balancer_listeners(struct osc_env *e, struct osc_str *out, struct osc_delete_load_balancer_listeners_arg *args);
int osc_delete_load_balancer(struct osc_env *e, struct osc_str *out, struct osc_delete_load_balancer_arg *args);
int osc_delete_listener_rule(struct osc_env *e, struct osc_str *out, struct osc_delete_listener_rule_arg *args);
int osc_delete_keypair(struct osc_env *e, struct osc_str *out, struct osc_delete_keypair_arg *args);
int osc_delete_internet_service(struct osc_env *e, struct osc_str *out, struct osc_delete_internet_service_arg *args);
int osc_delete_image(struct osc_env *e, struct osc_str *out, struct osc_delete_image_arg *args);
int osc_delete_flexible_gpu(struct osc_env *e, struct osc_str *out, struct osc_delete_flexible_gpu_arg *args);
int osc_delete_export_task(struct osc_env *e, struct osc_str *out, struct osc_delete_export_task_arg *args);
int osc_delete_direct_link_interface(struct osc_env *e, struct osc_str *out, struct osc_delete_direct_link_interface_arg *args);
int osc_delete_direct_link(struct osc_env *e, struct osc_str *out, struct osc_delete_direct_link_arg *args);
int osc_delete_dhcp_options(struct osc_env *e, struct osc_str *out, struct osc_delete_dhcp_options_arg *args);
int osc_delete_client_gateway(struct osc_env *e, struct osc_str *out, struct osc_delete_client_gateway_arg *args);
int osc_delete_ca(struct osc_env *e, struct osc_str *out, struct osc_delete_ca_arg *args);
int osc_delete_api_access_rule(struct osc_env *e, struct osc_str *out, struct osc_delete_api_access_rule_arg *args);
int osc_delete_access_key(struct osc_env *e, struct osc_str *out, struct osc_delete_access_key_arg *args);
int osc_create_vpn_connection_route(struct osc_env *e, struct osc_str *out, struct osc_create_vpn_connection_route_arg *args);
int osc_create_vpn_connection(struct osc_env *e, struct osc_str *out, struct osc_create_vpn_connection_arg *args);
int osc_create_volume(struct osc_env *e, struct osc_str *out, struct osc_create_volume_arg *args);
int osc_create_vms(struct osc_env *e, struct osc_str *out, struct osc_create_vms_arg *args);
int osc_create_virtual_gateway(struct osc_env *e, struct osc_str *out, struct osc_create_virtual_gateway_arg *args);
int osc_create_tags(struct osc_env *e, struct osc_str *out, struct osc_create_tags_arg *args);
int osc_create_subnet(struct osc_env *e, struct osc_str *out, struct osc_create_subnet_arg *args);
int osc_create_snapshot_export_task(struct osc_env *e, struct osc_str *out, struct osc_create_snapshot_export_task_arg *args);
int osc_create_snapshot(struct osc_env *e, struct osc_str *out, struct osc_create_snapshot_arg *args);
int osc_create_server_certificate(struct osc_env *e, struct osc_str *out, struct osc_create_server_certificate_arg *args);
int osc_create_security_group_rule(struct osc_env *e, struct osc_str *out, struct osc_create_security_group_rule_arg *args);
int osc_create_security_group(struct osc_env *e, struct osc_str *out, struct osc_create_security_group_arg *args);
int osc_create_route_table(struct osc_env *e, struct osc_str *out, struct osc_create_route_table_arg *args);
int osc_create_route(struct osc_env *e, struct osc_str *out, struct osc_create_route_arg *args);
int osc_create_public_ip(struct osc_env *e, struct osc_str *out, struct osc_create_public_ip_arg *args);
int osc_create_nic(struct osc_env *e, struct osc_str *out, struct osc_create_nic_arg *args);
int osc_create_net_peering(struct osc_env *e, struct osc_str *out, struct osc_create_net_peering_arg *args);
int osc_create_net_access_point(struct osc_env *e, struct osc_str *out, struct osc_create_net_access_point_arg *args);
int osc_create_net(struct osc_env *e, struct osc_str *out, struct osc_create_net_arg *args);
int osc_create_nat_service(struct osc_env *e, struct osc_str *out, struct osc_create_nat_service_arg *args);
int osc_create_load_balancer_tags(struct osc_env *e, struct osc_str *out, struct osc_create_load_balancer_tags_arg *args);
int osc_create_load_balancer_policy(struct osc_env *e, struct osc_str *out, struct osc_create_load_balancer_policy_arg *args);
int osc_create_load_balancer_listeners(struct osc_env *e, struct osc_str *out, struct osc_create_load_balancer_listeners_arg *args);
int osc_create_load_balancer(struct osc_env *e, struct osc_str *out, struct osc_create_load_balancer_arg *args);
int osc_create_listener_rule(struct osc_env *e, struct osc_str *out, struct osc_create_listener_rule_arg *args);
int osc_create_keypair(struct osc_env *e, struct osc_str *out, struct osc_create_keypair_arg *args);
int osc_create_internet_service(struct osc_env *e, struct osc_str *out, struct osc_create_internet_service_arg *args);
int osc_create_image_export_task(struct osc_env *e, struct osc_str *out, struct osc_create_image_export_task_arg *args);
int osc_create_image(struct osc_env *e, struct osc_str *out, struct osc_create_image_arg *args);
int osc_create_flexible_gpu(struct osc_env *e, struct osc_str *out, struct osc_create_flexible_gpu_arg *args);
int osc_create_direct_link_interface(struct osc_env *e, struct osc_str *out, struct osc_create_direct_link_interface_arg *args);
int osc_create_direct_link(struct osc_env *e, struct osc_str *out, struct osc_create_direct_link_arg *args);
int osc_create_dhcp_options(struct osc_env *e, struct osc_str *out, struct osc_create_dhcp_options_arg *args);
int osc_create_client_gateway(struct osc_env *e, struct osc_str *out, struct osc_create_client_gateway_arg *args);
int osc_create_ca(struct osc_env *e, struct osc_str *out, struct osc_create_ca_arg *args);
int osc_create_api_access_rule(struct osc_env *e, struct osc_str *out, struct osc_create_api_access_rule_arg *args);
int osc_create_account(struct osc_env *e, struct osc_str *out, struct osc_create_account_arg *args);
int osc_create_access_key(struct osc_env *e, struct osc_str *out, struct osc_create_access_key_arg *args);
int osc_check_authentication(struct osc_env *e, struct osc_str *out, struct osc_check_authentication_arg *args);
int osc_accept_net_peering(struct osc_env *e, struct osc_str *out, struct osc_accept_net_peering_arg *args);

#endif /* __SDK_C__ */
